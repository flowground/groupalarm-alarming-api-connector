{
    "openapi": "3.0.0",
    "info": {
        "description": "The alarming service implements the alarming logic and connected items, e.g. labels or units\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
        "title": " groupalarm Alarming API",
        "version": "1.16.7",
        "x-logo": {
            "url": "https://www.groupalarm.com/favicon/logo_512.png"
        }
    },
    "paths": {
        "/alarm": {
            "post": {
                "description": "Creates an alarm for an event and calculate required user for a notification",
                "tags": [
                    "alarm"
                ],
                "operationId": "CreateAlarm",
                "responses": {
                    "201": {
                        "description": "created alarm payload with passed parameters",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Passed alarm payload was not in the correct format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "This is used for an alarm creation",
                                "type": "object",
                                "title": "AlarmCreationRequest defines an alarm creation payload",
                                "required": [
                                    "organizationID",
                                    "message",
                                    "mode",
                                    "startTime"
                                ],
                                "properties": {
                                    "alarmTemplateID": {
                                        "description": "Alarm message template ID",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "AlarmTemplateID"
                                    },
                                    "eventID": {
                                        "description": "id of an existing event",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "EventID"
                                    },
                                    "eventName": {
                                        "description": "Name of an event; if event name is passed, a new event will be created with the passed name",
                                        "type": "string",
                                        "x-go-name": "EventName"
                                    },
                                    "labels": {
                                        "description": "list of labels to alarm",
                                        "type": "array",
                                        "minimum": 1,
                                        "items": {
                                            "description": "This is used for an alarm creation",
                                            "type": "object",
                                            "title": "AlarmCreationRequestLabel defines an alarm creation label payload",
                                            "properties": {
                                                "amount": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "x-go-name": "Amount"
                                                },
                                                "labelID": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "x-go-name": "LabelID"
                                                }
                                            },
                                            "x-go-package": "groupalarm.com/go/alarming/api/services"
                                        },
                                        "x-go-name": "Labels"
                                    },
                                    "message": {
                                        "description": "Alarm message",
                                        "type": "string",
                                        "x-go-name": "Message"
                                    },
                                    "mode": {
                                        "description": "Alarm mode (strict|best-effort)",
                                        "type": "string",
                                        "x-go-name": "Mode"
                                    },
                                    "optionalContent": {
                                        "description": "PropertyMap is used as container for additional data in alarms or messages\nit can be stored and retrieved easily in our Postgres database",
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "object"
                                        },
                                        "x-go-package": "groupalarm.com/go/common"
                                    },
                                    "organizationID": {
                                        "description": "ID of the organization to create the alarm as",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "OrganizationID"
                                    },
                                    "scenarioID": {
                                        "description": "id from the scenario",
                                        "type": "integer",
                                        "format": "int64",
                                        "minimum": 1,
                                        "x-go-name": "ScenarioID"
                                    },
                                    "startTime": {
                                        "description": "Start time for this alarm",
                                        "type": "string",
                                        "format": "date-time",
                                        "x-go-name": "StartTime"
                                    }
                                },
                                "x-go-package": "groupalarm.com/go/alarming/api/services"
                            }
                        }
                    }
                }
            }
        },
        "/alarm/{alarmID}": {
            "get": {
                "description": "Returns an alarm payload for requested alarm id",
                "tags": [
                    "alarm"
                ],
                "operationId": "GetAlarm",
                "parameters": [
                    {
                        "name": "alarmID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested alarm payload",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Passed id is in the wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            },
            "patch": {
                "description": "Closes the alarm with the passed alarm id",
                "tags": [
                    "alarm"
                ],
                "operationId": "CloseAlarm",
                "parameters": [
                    {
                        "name": "alarmID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested alarm was successfully closed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "success"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Passed id is in the wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            }
        },
        "/alarm/{alarmID}/{scenarioID}": {
            "get": {
                "description": "Closes the alarm with the passed alarm id",
                "tags": [
                    "alarm"
                ],
                "operationId": "PreviewAlarm",
                "parameters": [
                    {
                        "name": "alarmID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    },
                    {
                        "name": "scenarioID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested alarm was successfully closed",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Passed id is in the wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            }
        },
        "/alarms": {
            "get": {
                "description": "Returns all alarms",
                "tags": [
                    "alarm"
                ],
                "operationId": "GetAlarms",
                "parameters": [
                    {
                        "description": "id of organization",
                        "name": "organization",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    },
                    {
                        "description": "limits alarm list output to passed amount.",
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "int64",
                            "minimum": 1,
                            "maximum": 50,
                            "default": 10
                        }
                    },
                    {
                        "description": "defines the offset for pagination",
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "int64",
                            "default": 0
                        }
                    },
                    {
                        "description": "id of an event, to get all alarms for this event",
                        "name": "event",
                        "in": "query",
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Alarm list for requested organization",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Passed query parameters in wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            }
        },
        "/alarms/template": {
            "post": {
                "description": "Creates an alarm template with the passed parameters",
                "tags": [
                    "alarm"
                ],
                "operationId": "CreateAlarmTemplate",
                "parameters": [
                    {
                        "description": "template payload",
                        "name": "template",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "AlarmTemplate defines an alarm template payload",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ID"
                                },
                                "message": {
                                    "type": "string",
                                    "x-go-name": "Message"
                                },
                                "name": {
                                    "type": "string",
                                    "x-go-name": "Name"
                                },
                                "organizationID": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "OrganizationID"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/alarming/api/services"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created alarm template with created id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "AlarmTemplate defines an alarm template payload",
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "ID"
                                        },
                                        "message": {
                                            "type": "string",
                                            "x-go-name": "Message"
                                        },
                                        "name": {
                                            "type": "string",
                                            "x-go-name": "Name"
                                        },
                                        "organizationID": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "OrganizationID"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/alarming/api/services"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Passed query parameters in wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            }
        },
        "/alarms/template/:id": {
            "get": {
                "description": "Returns a specific alarm template for passed template id",
                "tags": [
                    "alarm"
                ],
                "operationId": "GetAlarmTemplate",
                "parameters": [
                    {
                        "description": "id of the template",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    },
                    {
                        "description": "id of organization",
                        "name": "organization_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Template list for requested organization",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "description": "AlarmTemplate defines an alarm template payload",
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "ID"
                                            },
                                            "message": {
                                                "type": "string",
                                                "x-go-name": "Message"
                                            },
                                            "name": {
                                                "type": "string",
                                                "x-go-name": "Name"
                                            },
                                            "organizationID": {
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "OrganizationID"
                                            }
                                        },
                                        "x-go-package": "groupalarm.com/go/alarming/api/services"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Passed query parameters in wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            }
        },
        "/alarms/template/{id}": {
            "put": {
                "description": "Updates an alarm template with the passed parameters",
                "tags": [
                    "alarm"
                ],
                "operationId": "UpdateAlarmTemplate",
                "parameters": [
                    {
                        "description": "id of the alarm template",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    },
                    {
                        "description": "template payload",
                        "name": "template",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "AlarmTemplate defines an alarm template payload",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ID"
                                },
                                "message": {
                                    "type": "string",
                                    "x-go-name": "Message"
                                },
                                "name": {
                                    "type": "string",
                                    "x-go-name": "Name"
                                },
                                "organizationID": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "OrganizationID"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/alarming/api/services"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update successfully processed"
                    },
                    "400": {
                        "description": "Passed query parameters in wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            },
            "delete": {
                "description": "Updates an alarm template with the passed parameters",
                "tags": [
                    "alarm"
                ],
                "operationId": "DeleteAlarmTemplate",
                "parameters": [
                    {
                        "description": "id of the alarm template",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Alarm template was successfully deleted"
                    },
                    "400": {
                        "description": "Passed query parameters in wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            }
        },
        "/alarms/templates": {
            "get": {
                "description": "Returns all alarm templates for passed organization id",
                "tags": [
                    "alarm"
                ],
                "operationId": "GetAlarmTemplates",
                "parameters": [
                    {
                        "description": "id of organization",
                        "name": "organization_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Template list for requested organization",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "description": "AlarmTemplate defines an alarm template payload",
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "ID"
                                            },
                                            "message": {
                                                "type": "string",
                                                "x-go-name": "Message"
                                            },
                                            "name": {
                                                "type": "string",
                                                "x-go-name": "Name"
                                            },
                                            "organizationID": {
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "OrganizationID"
                                            }
                                        },
                                        "x-go-package": "groupalarm.com/go/alarming/api/services"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Passed query parameters in wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            }
        },
        "/event": {
            "post": {
                "description": "Creates an event with the passed event payload",
                "tags": [
                    "event"
                ],
                "operationId": "CreateEvent",
                "responses": {
                    "201": {
                        "description": "created event payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Event describes an event payload",
                                    "type": "object",
                                    "required": [
                                        "name",
                                        "startDate",
                                        "organizationID"
                                    ],
                                    "properties": {
                                        "endDate": {
                                            "description": "time where this event was closed",
                                            "type": "string",
                                            "format": "date-time",
                                            "x-go-name": "EndDate"
                                        },
                                        "id": {
                                            "description": "id for this event",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "ID"
                                        },
                                        "name": {
                                            "description": "user given name for this event",
                                            "type": "string",
                                            "x-go-name": "Name"
                                        },
                                        "organizationID": {
                                            "description": "organization assignment by organization ID",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "OrganizationID"
                                        },
                                        "scheduledEndtime": {
                                            "description": "time this event is scheduled for close",
                                            "type": "string",
                                            "format": "date-time",
                                            "x-go-name": "ScheduledEndtime"
                                        },
                                        "startDate": {
                                            "description": "time where this event starts",
                                            "type": "string",
                                            "format": "date-time",
                                            "x-go-name": "StartDate"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/alarming/api/services"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Passed payload is in the wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Event describes an event payload",
                                "type": "object",
                                "required": [
                                    "name",
                                    "startDate",
                                    "organizationID"
                                ],
                                "properties": {
                                    "endDate": {
                                        "description": "time where this event was closed",
                                        "type": "string",
                                        "format": "date-time",
                                        "x-go-name": "EndDate"
                                    },
                                    "id": {
                                        "description": "id for this event",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "ID"
                                    },
                                    "name": {
                                        "description": "user given name for this event",
                                        "type": "string",
                                        "x-go-name": "Name"
                                    },
                                    "organizationID": {
                                        "description": "organization assignment by organization ID",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "OrganizationID"
                                    },
                                    "scheduledEndtime": {
                                        "description": "time this event is scheduled for close",
                                        "type": "string",
                                        "format": "date-time",
                                        "x-go-name": "ScheduledEndtime"
                                    },
                                    "startDate": {
                                        "description": "time where this event starts",
                                        "type": "string",
                                        "format": "date-time",
                                        "x-go-name": "StartDate"
                                    }
                                },
                                "x-go-package": "groupalarm.com/go/alarming/api/services"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/event/{eventID}": {
            "get": {
                "description": "Creates an event with the passed event ID",
                "tags": [
                    "event"
                ],
                "operationId": "GetEvent",
                "parameters": [
                    {
                        "name": "eventID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "requested event payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Event describes an event payload",
                                    "type": "object",
                                    "required": [
                                        "name",
                                        "startDate",
                                        "organizationID"
                                    ],
                                    "properties": {
                                        "endDate": {
                                            "description": "time where this event was closed",
                                            "type": "string",
                                            "format": "date-time",
                                            "x-go-name": "EndDate"
                                        },
                                        "id": {
                                            "description": "id for this event",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "ID"
                                        },
                                        "name": {
                                            "description": "user given name for this event",
                                            "type": "string",
                                            "x-go-name": "Name"
                                        },
                                        "organizationID": {
                                            "description": "organization assignment by organization ID",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "OrganizationID"
                                        },
                                        "scheduledEndtime": {
                                            "description": "time this event is scheduled for close",
                                            "type": "string",
                                            "format": "date-time",
                                            "x-go-name": "ScheduledEndtime"
                                        },
                                        "startDate": {
                                            "description": "time where this event starts",
                                            "type": "string",
                                            "format": "date-time",
                                            "x-go-name": "StartDate"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/alarming/api/services"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Passed id is in the wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            },
            "patch": {
                "description": "Closes an event with the passed event ID",
                "tags": [
                    "event"
                ],
                "operationId": "CloseEvent",
                "parameters": [
                    {
                        "name": "eventID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "event 1 was successfully closed"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Passed id is in the wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            }
        },
        "/events": {
            "get": {
                "description": "Returns paginated events of a passed organization",
                "tags": [
                    "event"
                ],
                "operationId": "GetEvents",
                "parameters": [
                    {
                        "description": "ID of an organization",
                        "name": "organization",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    },
                    {
                        "description": "max. amount of entries in list",
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "int64"
                        }
                    },
                    {
                        "description": "amount of entries to skip",
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "events for passed organization",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "An EventList contains multiple EventListItems and a TotalEvents count used for pagination",
                                    "type": "object",
                                    "properties": {
                                        "events": {
                                            "description": "event array with events",
                                            "type": "array",
                                            "items": {
                                                "description": "An EventListItem is used as a single audit-log entry in an EventList",
                                                "type": "object",
                                                "properties": {
                                                    "data": {
                                                        "description": "data for view",
                                                        "type": "string",
                                                        "x-go-name": "Data"
                                                    },
                                                    "id": {
                                                        "description": "id of this item",
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "x-go-name": "ID"
                                                    },
                                                    "organizationID": {
                                                        "description": "connected organization as ID",
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "x-go-name": "OrganizationID"
                                                    },
                                                    "service": {
                                                        "description": "affected service / entity-type",
                                                        "type": "string",
                                                        "x-go-name": "Service"
                                                    },
                                                    "timestamp": {
                                                        "description": "timestamp, when action was logged",
                                                        "type": "string",
                                                        "x-go-name": "Timestamp"
                                                    },
                                                    "type": {
                                                        "description": "action type [create, edit, delete]",
                                                        "type": "string",
                                                        "x-go-name": "Type"
                                                    },
                                                    "user": {
                                                        "description": "User is a basic copy of user-service's PublicUser",
                                                        "type": "object",
                                                        "properties": {
                                                            "email": {
                                                                "type": "string",
                                                                "x-go-name": "EMail"
                                                            },
                                                            "id": {
                                                                "type": "integer",
                                                                "format": "int64",
                                                                "x-go-name": "ID"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "x-go-name": "Name"
                                                            },
                                                            "surname": {
                                                                "type": "string",
                                                                "x-go-name": "Surname"
                                                            }
                                                        },
                                                        "x-go-package": "groupalarm.com/go/audit/api/services"
                                                    }
                                                },
                                                "x-go-package": "groupalarm.com/go/audit/api/services"
                                            },
                                            "x-go-name": "Events"
                                        },
                                        "totalEvents": {
                                            "description": "total amount of events inside the events array",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "TotalEvents"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/audit/api/services"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Passed organization ID is in the wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            }
        },
        "/events/open": {
            "get": {
                "description": "Returns all open events of a passed organization",
                "tags": [
                    "event"
                ],
                "operationId": "GetOpenEvents",
                "parameters": [
                    {
                        "description": "ID of an organization",
                        "name": "organization",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "open events for passed organization",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "description": "Event describes an event payload",
                                        "type": "object",
                                        "required": [
                                            "name",
                                            "startDate",
                                            "organizationID"
                                        ],
                                        "properties": {
                                            "endDate": {
                                                "description": "time where this event was closed",
                                                "type": "string",
                                                "format": "date-time",
                                                "x-go-name": "EndDate"
                                            },
                                            "id": {
                                                "description": "id for this event",
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "ID"
                                            },
                                            "name": {
                                                "description": "user given name for this event",
                                                "type": "string",
                                                "x-go-name": "Name"
                                            },
                                            "organizationID": {
                                                "description": "organization assignment by organization ID",
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "OrganizationID"
                                            },
                                            "scheduledEndtime": {
                                                "description": "time this event is scheduled for close",
                                                "type": "string",
                                                "format": "date-time",
                                                "x-go-name": "ScheduledEndtime"
                                            },
                                            "startDate": {
                                                "description": "time where this event starts",
                                                "type": "string",
                                                "format": "date-time",
                                                "x-go-name": "StartDate"
                                            }
                                        },
                                        "x-go-package": "groupalarm.com/go/alarming/api/services"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Passed organization ID is in the wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            }
        },
        "/label": {
            "post": {
                "description": "Creates a new label with the passed label payload parameters",
                "tags": [
                    "labels"
                ],
                "operationId": "CreateLabel",
                "responses": {
                    "201": {
                        "description": "created label",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Passed label payload in wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    },
                    "description": "label payload",
                    "required": true
                }
            }
        },
        "/label/{labelID}": {
            "get": {
                "description": "Returns a specific label with passed ID",
                "tags": [
                    "labels"
                ],
                "operationId": "GetLabel",
                "parameters": [
                    {
                        "name": "labelID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "requested label",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Passed label ID in wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            },
            "put": {
                "description": "Updates a specific label by a passed label ID and a label payload",
                "tags": [
                    "labels"
                ],
                "operationId": "UpdateLabel",
                "parameters": [
                    {
                        "name": "labelID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updated label payload",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Passed parameters in the wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    },
                    "required": true
                }
            },
            "delete": {
                "description": "Deletes the label with passed ID",
                "tags": [
                    "labels"
                ],
                "operationId": "DeleteLabel",
                "parameters": [
                    {
                        "name": "labelID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "label was deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "label 1 successfully deleted"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Passed label ID in wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            }
        },
        "/label/{labelID}/assignees/{userID}": {
            "post": {
                "description": "Assignes a user to a label",
                "tags": [
                    "labels"
                ],
                "operationId": "AssignLabel",
                "parameters": [
                    {
                        "name": "labelID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "successfully assigned label"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Passed parameters in wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            },
            "delete": {
                "description": "Unassignes a user from a label",
                "tags": [
                    "labels"
                ],
                "operationId": "UnassignLabel",
                "parameters": [
                    {
                        "name": "labelID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    },
                    {
                        "name": "userID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "label 1 successfully deleted"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Passed parameters in wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            }
        },
        "/labels": {
            "get": {
                "description": "Get all labels for queried organization",
                "tags": [
                    "labels"
                ],
                "operationId": "GetLabels",
                "parameters": [
                    {
                        "description": "id of an organization",
                        "name": "organization",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    },
                    {
                        "description": "id of an user, e.g. for user label assignment",
                        "name": "user",
                        "in": "query",
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "created alarm payload with passed parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Passed query parameters in wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            }
        },
        "/labels/export/{organizationID}": {
            "get": {
                "description": "Get all labels for queried organization",
                "tags": [
                    "labels"
                ],
                "operationId": "GetLabelsCSV",
                "parameters": [
                    {
                        "description": "id of an organization",
                        "name": "organizationID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CSV file with all labels of requested organization",
                        "content": {
                            "text/csv": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Passed query parameters in wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            }
        },
        "/labels/import/{organizationID}": {
            "post": {
                "description": "Imports multiple labels for the passed organization",
                "tags": [
                    "labels"
                ],
                "operationId": "ImportLabels",
                "parameters": [
                    {
                        "description": "id of an organization",
                        "name": "organizationID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Labels successfully imported"
                    },
                    "400": {
                        "description": "Passed query parameters in wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            }
        },
        "/labels/strength/{organization}": {
            "get": {
                "description": "Get label to strength configuration for passed organization",
                "tags": [
                    "strength"
                ],
                "operationId": "GetStrength",
                "parameters": [
                    {
                        "description": "id of an organization",
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "label-strength assignment array",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "description": "StrengthConfig describes a strength configuration payload",
                                        "type": "object",
                                        "properties": {
                                            "labels": {
                                                "description": "assigned label ids for this rank",
                                                "type": "array",
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "x-go-name": "Labels"
                                            },
                                            "rank": {
                                                "description": "rank definition (soldier, officer, general, summary)",
                                                "type": "string",
                                                "x-go-name": "Rank"
                                            }
                                        },
                                        "x-go-package": "groupalarm.com/go/alarming/api/services"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Passed query parameters in wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            },
            "post": {
                "description": "Creates a new or changes an existing strength configuration for passed organization",
                "tags": [
                    "strength"
                ],
                "operationId": "UpsertStrength",
                "parameters": [
                    {
                        "description": "id of an organization",
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "edited or created strength configuration payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "StrengthConfig describes a strength configuration payload",
                                    "type": "object",
                                    "properties": {
                                        "labels": {
                                            "description": "assigned label ids for this rank",
                                            "type": "array",
                                            "items": {
                                                "type": "integer",
                                                "format": "int64"
                                            },
                                            "x-go-name": "Labels"
                                        },
                                        "rank": {
                                            "description": "rank definition (soldier, officer, general, summary)",
                                            "type": "string",
                                            "x-go-name": "Rank"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/alarming/api/services"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Passed parameters in wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "This is used for the strength config and wraps all configurations inside an array",
                                "type": "object",
                                "title": "Definition a strength config payload",
                                "required": [
                                    "configs"
                                ],
                                "properties": {
                                    "configs": {
                                        "type": "array",
                                        "items": {
                                            "description": "StrengthConfig describes a strength configuration payload",
                                            "type": "object",
                                            "properties": {
                                                "labels": {
                                                    "description": "assigned label ids for this rank",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "x-go-name": "Labels"
                                                },
                                                "rank": {
                                                    "description": "rank definition (soldier, officer, general, summary)",
                                                    "type": "string",
                                                    "x-go-name": "Rank"
                                                }
                                            },
                                            "x-go-package": "groupalarm.com/go/alarming/api/services"
                                        },
                                        "x-go-name": "Configs"
                                    }
                                },
                                "x-go-package": "groupalarm.com/go/alarming/api/handler"
                            }
                        }
                    },
                    "description": "user-rank assignment payload"
                }
            }
        },
        "/labels/strength/{organization}/user": {
            "get": {
                "description": "Get all assigned ranks for every user of the passed organization",
                "tags": [
                    "strength"
                ],
                "operationId": "GetUserRanks",
                "parameters": [
                    {
                        "description": "id of an organization",
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user-rank assignment as map",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object",
                                        "properties": {
                                            "rank": {
                                                "type": "string"
                                            },
                                            "userID": {
                                                "type": "int64"
                                            }
                                        }
                                    },
                                    "example": {
                                        "1": "soldier",
                                        "7": "general"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Passed organization id in wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            }
        },
        "/labels/strength/{organization}/user/assign": {
            "post": {
                "description": "Assing a rank to passed user",
                "tags": [
                    "strength"
                ],
                "operationId": "AssignUserRank",
                "parameters": [
                    {
                        "description": "id of an organization",
                        "name": "organization",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user was assigned to the requested rank",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "success"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Passed parameters in wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "This is used for a user-rank assignment request",
                                "type": "object",
                                "title": "Definition an user to rank assignment request payload",
                                "required": [
                                    "userID",
                                    "rank"
                                ],
                                "properties": {
                                    "rank": {
                                        "description": "rank value",
                                        "type": "string",
                                        "x-go-name": "Rank"
                                    },
                                    "userID": {
                                        "description": "userID",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "UserID"
                                    }
                                },
                                "x-go-package": "groupalarm.com/go/alarming/api/handler"
                            }
                        }
                    },
                    "description": "user-rank assignment payload"
                }
            }
        },
        "/scenario": {
            "post": {
                "description": "Creates a scenario with the passed parameters of a scenario payload",
                "tags": [
                    "scenario"
                ],
                "operationId": "CreateScenario",
                "responses": {
                    "201": {
                        "description": "created scenario with all parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Passed scenario payload is in the wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "ScenarioCreationRequest contains the a creation request of a scenario",
                                "type": "object",
                                "required": [
                                    "name",
                                    "description",
                                    "units",
                                    "organizationID",
                                    "sendPosition"
                                ],
                                "properties": {
                                    "description": {
                                        "description": "user given description for this scenario",
                                        "type": "string",
                                        "x-go-name": "Description"
                                    },
                                    "instructionCatalogID": {
                                        "description": "possible id of an instruction catalog",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "InstructionCatalogID"
                                    },
                                    "name": {
                                        "description": "user given name for this scenario",
                                        "type": "string",
                                        "x-go-name": "Name"
                                    },
                                    "organizationID": {
                                        "description": "assigned organization by an ID",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "OrganizationID"
                                    },
                                    "sendPosition": {
                                        "description": "send position to users after alarm is closed",
                                        "type": "boolean",
                                        "x-go-name": "SendPosition"
                                    },
                                    "units": {
                                        "description": "all units by their ID in an array",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "x-go-name": "Units"
                                    }
                                },
                                "x-go-package": "groupalarm.com/go/alarming/api/services"
                            }
                        }
                    },
                    "description": "scenario payload",
                    "required": true
                }
            }
        },
        "/scenario/{scenarioID}": {
            "get": {
                "description": "Returns a specific scenario payload for a scenario with passed ID",
                "tags": [
                    "scenario"
                ],
                "operationId": "GetScenario",
                "parameters": [
                    {
                        "name": "scenarioID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "requested scenario",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Passed scenario ID is in the wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            },
            "put": {
                "description": "Updates an existing scenario with passed scenario ID and scenario payload",
                "tags": [
                    "scenario"
                ],
                "operationId": "UpdateScenario",
                "parameters": [
                    {
                        "name": "scenarioID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updated scenario payload",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Passed parameters in the wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "ScenarioCreationRequest contains the a creation request of a scenario",
                                "type": "object",
                                "required": [
                                    "name",
                                    "description",
                                    "units",
                                    "organizationID",
                                    "sendPosition"
                                ],
                                "properties": {
                                    "description": {
                                        "description": "user given description for this scenario",
                                        "type": "string",
                                        "x-go-name": "Description"
                                    },
                                    "instructionCatalogID": {
                                        "description": "possible id of an instruction catalog",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "InstructionCatalogID"
                                    },
                                    "name": {
                                        "description": "user given name for this scenario",
                                        "type": "string",
                                        "x-go-name": "Name"
                                    },
                                    "organizationID": {
                                        "description": "assigned organization by an ID",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "OrganizationID"
                                    },
                                    "sendPosition": {
                                        "description": "send position to users after alarm is closed",
                                        "type": "boolean",
                                        "x-go-name": "SendPosition"
                                    },
                                    "units": {
                                        "description": "all units by their ID in an array",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "x-go-name": "Units"
                                    }
                                },
                                "x-go-package": "groupalarm.com/go/alarming/api/services"
                            }
                        }
                    },
                    "required": true
                }
            },
            "delete": {
                "description": "Deletes an existing scenario with passed scenario ID",
                "tags": [
                    "scenario"
                ],
                "operationId": "DeleteScenario",
                "parameters": [
                    {
                        "name": "scenarioID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "successfully deleted scenario"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Passed scenario ID is in the wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            }
        },
        "/scenarios": {
            "get": {
                "description": "Returns all scenarios in the organization with the passed ID",
                "tags": [
                    "scenario"
                ],
                "operationId": "GetScenarios",
                "parameters": [
                    {
                        "name": "organizationID",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "all scenarios assigned to passed organization",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Passed organization ID is in the wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            }
        },
        "/schedules": {
            "get": {
                "description": "Get all shift schedules for queried organization",
                "tags": [
                    "schedules"
                ],
                "operationId": "GetSchedules",
                "parameters": [
                    {
                        "description": "id of an organization",
                        "name": "organization",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of all shift schedules",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "description": "ShiftSchedule contains meta-information about the schedule and multiple shifts",
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "ID"
                                            },
                                            "name": {
                                                "type": "string",
                                                "x-go-name": "Name"
                                            },
                                            "organizationID": {
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "OrganizationID"
                                            },
                                            "shifts": {
                                                "type": "array",
                                                "items": {
                                                    "description": "Shift describes the intervals of a shift and the assigned users all user defined parameters",
                                                    "type": "object",
                                                    "properties": {
                                                        "assignees": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                            },
                                                            "x-go-name": "Assignees"
                                                        },
                                                        "color": {
                                                            "type": "string",
                                                            "x-go-name": "Color"
                                                        },
                                                        "days": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                            },
                                                            "x-go-name": "Days"
                                                        },
                                                        "endTime": {
                                                            "type": "string",
                                                            "x-go-name": "EndTime"
                                                        },
                                                        "id": {
                                                            "type": "integer",
                                                            "format": "int64",
                                                            "x-go-name": "ID"
                                                        },
                                                        "mappingDate": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "x-go-name": "MappingDate"
                                                        },
                                                        "mappingLength": {
                                                            "type": "integer",
                                                            "format": "int64",
                                                            "x-go-name": "MappingLength"
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "x-go-name": "Name"
                                                        },
                                                        "shiftScheduleID": {
                                                            "type": "integer",
                                                            "format": "int64",
                                                            "x-go-name": "ShiftScheduleID"
                                                        },
                                                        "startTime": {
                                                            "type": "string",
                                                            "x-go-name": "StartTime"
                                                        }
                                                    },
                                                    "x-go-package": "groupalarm.com/go/alarming/api/services"
                                                },
                                                "x-go-name": "Shifts"
                                            }
                                        },
                                        "x-go-package": "groupalarm.com/go/alarming/api/services"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "invalid request"
                    },
                    "500": {
                        "description": "unexpected database error"
                    }
                }
            },
            "post": {
                "description": "Create a new shift schedule",
                "tags": [
                    "schedules"
                ],
                "operationId": "CreateSchedule",
                "responses": {
                    "201": {
                        "description": "created shift schedule",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "ShiftSchedule contains meta-information about the schedule and multiple shifts",
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "ID"
                                        },
                                        "name": {
                                            "type": "string",
                                            "x-go-name": "Name"
                                        },
                                        "organizationID": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "OrganizationID"
                                        },
                                        "shifts": {
                                            "type": "array",
                                            "items": {
                                                "description": "Shift describes the intervals of a shift and the assigned users all user defined parameters",
                                                "type": "object",
                                                "properties": {
                                                    "assignees": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "x-go-name": "Assignees"
                                                    },
                                                    "color": {
                                                        "type": "string",
                                                        "x-go-name": "Color"
                                                    },
                                                    "days": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "x-go-name": "Days"
                                                    },
                                                    "endTime": {
                                                        "type": "string",
                                                        "x-go-name": "EndTime"
                                                    },
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "x-go-name": "ID"
                                                    },
                                                    "mappingDate": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "x-go-name": "MappingDate"
                                                    },
                                                    "mappingLength": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "x-go-name": "MappingLength"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "x-go-name": "Name"
                                                    },
                                                    "shiftScheduleID": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "x-go-name": "ShiftScheduleID"
                                                    },
                                                    "startTime": {
                                                        "type": "string",
                                                        "x-go-name": "StartTime"
                                                    }
                                                },
                                                "x-go-package": "groupalarm.com/go/alarming/api/services"
                                            },
                                            "x-go-name": "Shifts"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/alarming/api/services"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "invalid request"
                    },
                    "500": {
                        "description": "unexpected database error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "ShiftSchedule contains meta-information about the schedule and multiple shifts",
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "ID"
                                    },
                                    "name": {
                                        "type": "string",
                                        "x-go-name": "Name"
                                    },
                                    "organizationID": {
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "OrganizationID"
                                    },
                                    "shifts": {
                                        "type": "array",
                                        "items": {
                                            "description": "Shift describes the intervals of a shift and the assigned users all user defined parameters",
                                            "type": "object",
                                            "properties": {
                                                "assignees": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "x-go-name": "Assignees"
                                                },
                                                "color": {
                                                    "type": "string",
                                                    "x-go-name": "Color"
                                                },
                                                "days": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "x-go-name": "Days"
                                                },
                                                "endTime": {
                                                    "type": "string",
                                                    "x-go-name": "EndTime"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "x-go-name": "ID"
                                                },
                                                "mappingDate": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "x-go-name": "MappingDate"
                                                },
                                                "mappingLength": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "x-go-name": "MappingLength"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "x-go-name": "Name"
                                                },
                                                "shiftScheduleID": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "x-go-name": "ShiftScheduleID"
                                                },
                                                "startTime": {
                                                    "type": "string",
                                                    "x-go-name": "StartTime"
                                                }
                                            },
                                            "x-go-package": "groupalarm.com/go/alarming/api/services"
                                        },
                                        "x-go-name": "Shifts"
                                    }
                                },
                                "x-go-package": "groupalarm.com/go/alarming/api/services"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/schedules/{id}": {
            "get": {
                "description": "Get a single shift schedule",
                "tags": [
                    "schedules"
                ],
                "operationId": "GetSchedules",
                "parameters": [
                    {
                        "description": "id of a shift schedule",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "requested shift schedule",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "ShiftSchedule contains meta-information about the schedule and multiple shifts",
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "ID"
                                        },
                                        "name": {
                                            "type": "string",
                                            "x-go-name": "Name"
                                        },
                                        "organizationID": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "OrganizationID"
                                        },
                                        "shifts": {
                                            "type": "array",
                                            "items": {
                                                "description": "Shift describes the intervals of a shift and the assigned users all user defined parameters",
                                                "type": "object",
                                                "properties": {
                                                    "assignees": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "x-go-name": "Assignees"
                                                    },
                                                    "color": {
                                                        "type": "string",
                                                        "x-go-name": "Color"
                                                    },
                                                    "days": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "x-go-name": "Days"
                                                    },
                                                    "endTime": {
                                                        "type": "string",
                                                        "x-go-name": "EndTime"
                                                    },
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "x-go-name": "ID"
                                                    },
                                                    "mappingDate": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "x-go-name": "MappingDate"
                                                    },
                                                    "mappingLength": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "x-go-name": "MappingLength"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "x-go-name": "Name"
                                                    },
                                                    "shiftScheduleID": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "x-go-name": "ShiftScheduleID"
                                                    },
                                                    "startTime": {
                                                        "type": "string",
                                                        "x-go-name": "StartTime"
                                                    }
                                                },
                                                "x-go-package": "groupalarm.com/go/alarming/api/services"
                                            },
                                            "x-go-name": "Shifts"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/alarming/api/services"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "invalid request"
                    },
                    "404": {
                        "description": "shift schedule not found"
                    },
                    "500": {
                        "description": "unexpected database error"
                    }
                }
            },
            "put": {
                "description": "Update an existing shift schedule",
                "tags": [
                    "schedules"
                ],
                "operationId": "UpdateSchedule",
                "parameters": [
                    {
                        "description": "id of a shift schedule",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updated shift schedule",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "ShiftSchedule contains meta-information about the schedule and multiple shifts",
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "ID"
                                        },
                                        "name": {
                                            "type": "string",
                                            "x-go-name": "Name"
                                        },
                                        "organizationID": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "OrganizationID"
                                        },
                                        "shifts": {
                                            "type": "array",
                                            "items": {
                                                "description": "Shift describes the intervals of a shift and the assigned users all user defined parameters",
                                                "type": "object",
                                                "properties": {
                                                    "assignees": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "x-go-name": "Assignees"
                                                    },
                                                    "color": {
                                                        "type": "string",
                                                        "x-go-name": "Color"
                                                    },
                                                    "days": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "x-go-name": "Days"
                                                    },
                                                    "endTime": {
                                                        "type": "string",
                                                        "x-go-name": "EndTime"
                                                    },
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "x-go-name": "ID"
                                                    },
                                                    "mappingDate": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "x-go-name": "MappingDate"
                                                    },
                                                    "mappingLength": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "x-go-name": "MappingLength"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "x-go-name": "Name"
                                                    },
                                                    "shiftScheduleID": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "x-go-name": "ShiftScheduleID"
                                                    },
                                                    "startTime": {
                                                        "type": "string",
                                                        "x-go-name": "StartTime"
                                                    }
                                                },
                                                "x-go-package": "groupalarm.com/go/alarming/api/services"
                                            },
                                            "x-go-name": "Shifts"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/alarming/api/services"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "invalid request"
                    },
                    "500": {
                        "description": "unexpected database error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "ShiftSchedule contains meta-information about the schedule and multiple shifts",
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "ID"
                                    },
                                    "name": {
                                        "type": "string",
                                        "x-go-name": "Name"
                                    },
                                    "organizationID": {
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "OrganizationID"
                                    },
                                    "shifts": {
                                        "type": "array",
                                        "items": {
                                            "description": "Shift describes the intervals of a shift and the assigned users all user defined parameters",
                                            "type": "object",
                                            "properties": {
                                                "assignees": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "x-go-name": "Assignees"
                                                },
                                                "color": {
                                                    "type": "string",
                                                    "x-go-name": "Color"
                                                },
                                                "days": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "x-go-name": "Days"
                                                },
                                                "endTime": {
                                                    "type": "string",
                                                    "x-go-name": "EndTime"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "x-go-name": "ID"
                                                },
                                                "mappingDate": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "x-go-name": "MappingDate"
                                                },
                                                "mappingLength": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "x-go-name": "MappingLength"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "x-go-name": "Name"
                                                },
                                                "shiftScheduleID": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "x-go-name": "ShiftScheduleID"
                                                },
                                                "startTime": {
                                                    "type": "string",
                                                    "x-go-name": "StartTime"
                                                }
                                            },
                                            "x-go-package": "groupalarm.com/go/alarming/api/services"
                                        },
                                        "x-go-name": "Shifts"
                                    }
                                },
                                "x-go-package": "groupalarm.com/go/alarming/api/services"
                            }
                        }
                    },
                    "required": true
                }
            },
            "delete": {
                "description": "Delete an existing shift schedule",
                "tags": [
                    "schedules"
                ],
                "operationId": "DeleteSchedule",
                "parameters": [
                    {
                        "description": "id of a shift schedule",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleted shift schedule"
                    },
                    "400": {
                        "description": "invalid request"
                    },
                    "500": {
                        "description": "unexpected database error"
                    }
                }
            }
        },
        "/unit": {
            "post": {
                "description": "Creates an unit with passed unit payload",
                "tags": [
                    "units"
                ],
                "operationId": "CreateUnit",
                "responses": {
                    "201": {
                        "description": "created unit payload",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Passed parameters in the wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "This is used for the unit creation dialog",
                                "type": "object",
                                "title": "UnitCreationRequest describes an unit creation payload",
                                "required": [
                                    "name",
                                    "description",
                                    "organizationID",
                                    "unitParts"
                                ],
                                "properties": {
                                    "description": {
                                        "description": "user given description for this unit",
                                        "type": "string",
                                        "x-go-name": "Description"
                                    },
                                    "name": {
                                        "description": "user given name for this unit",
                                        "type": "string",
                                        "x-go-name": "Name"
                                    },
                                    "organizationID": {
                                        "description": "id from assigned organization",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "OrganizationID"
                                    },
                                    "unitParts": {
                                        "description": "assigned unit parts for labels and their amounts",
                                        "type": "array",
                                        "items": {
                                            "description": "This is used for the unit creation dialog and unit parts inside the unit creation payload",
                                            "type": "object",
                                            "title": "UnitPartCreationRequest describes an unit part creation payload",
                                            "properties": {
                                                "amount": {
                                                    "description": "Amount of users for the defined label",
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "x-go-name": "Amount"
                                                },
                                                "labelID": {
                                                    "description": "ID of the assigned label",
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "x-go-name": "LabelID"
                                                },
                                                "unitID": {
                                                    "description": "ID of the unit",
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "x-go-name": "UnitID"
                                                }
                                            },
                                            "x-go-package": "groupalarm.com/go/alarming/api/services"
                                        },
                                        "x-go-name": "UnitParts"
                                    }
                                },
                                "x-go-package": "groupalarm.com/go/alarming/api/services"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/unit/{unitID}": {
            "get": {
                "description": "Returns a specific unit with the passed unit ID",
                "tags": [
                    "units"
                ],
                "operationId": "GetUnit",
                "parameters": [
                    {
                        "name": "unitID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "requested unit payload",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Passed unit ID in the wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            },
            "put": {
                "description": "Updates a specific unit by a passed unit ID and a unit creation payload",
                "tags": [
                    "units"
                ],
                "operationId": "UpdateUnit",
                "parameters": [
                    {
                        "name": "unitID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updated unit payload",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Passed parameters in the wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "This is used for the unit creation dialog",
                                "type": "object",
                                "title": "UnitCreationRequest describes an unit creation payload",
                                "required": [
                                    "name",
                                    "description",
                                    "organizationID",
                                    "unitParts"
                                ],
                                "properties": {
                                    "description": {
                                        "description": "user given description for this unit",
                                        "type": "string",
                                        "x-go-name": "Description"
                                    },
                                    "name": {
                                        "description": "user given name for this unit",
                                        "type": "string",
                                        "x-go-name": "Name"
                                    },
                                    "organizationID": {
                                        "description": "id from assigned organization",
                                        "type": "integer",
                                        "format": "int64",
                                        "x-go-name": "OrganizationID"
                                    },
                                    "unitParts": {
                                        "description": "assigned unit parts for labels and their amounts",
                                        "type": "array",
                                        "items": {
                                            "description": "This is used for the unit creation dialog and unit parts inside the unit creation payload",
                                            "type": "object",
                                            "title": "UnitPartCreationRequest describes an unit part creation payload",
                                            "properties": {
                                                "amount": {
                                                    "description": "Amount of users for the defined label",
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "x-go-name": "Amount"
                                                },
                                                "labelID": {
                                                    "description": "ID of the assigned label",
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "x-go-name": "LabelID"
                                                },
                                                "unitID": {
                                                    "description": "ID of the unit",
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "x-go-name": "UnitID"
                                                }
                                            },
                                            "x-go-package": "groupalarm.com/go/alarming/api/services"
                                        },
                                        "x-go-name": "UnitParts"
                                    }
                                },
                                "x-go-package": "groupalarm.com/go/alarming/api/services"
                            }
                        }
                    },
                    "required": true
                }
            },
            "delete": {
                "description": "Deletes the unit with the passed unit ID",
                "tags": [
                    "units"
                ],
                "operationId": "DeleteUnit",
                "parameters": [
                    {
                        "name": "unitID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "message": "successfully delete unit"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Passed unit ID in the wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            }
        },
        "/units": {
            "get": {
                "description": "Returns all units of a passed organization",
                "tags": [
                    "units"
                ],
                "operationId": "GetUnits",
                "parameters": [
                    {
                        "name": "organization",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "all units of an organization",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Passed organization ID in the wrong format"
                    },
                    "500": {
                        "description": "Unexpected database error"
                    }
                }
            }
        }
    },
    "servers": [
        {
            "url": "https://app.groupalarm.com/api/v1"
        }
    ],
    "components": {
        "requestBodies": {
            "ShiftSchedule": {
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "ShiftSchedule contains meta-information about the schedule and multiple shifts",
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ID"
                                },
                                "name": {
                                    "type": "string",
                                    "x-go-name": "Name"
                                },
                                "organizationID": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "OrganizationID"
                                },
                                "shifts": {
                                    "type": "array",
                                    "items": {
                                        "description": "Shift describes the intervals of a shift and the assigned users all user defined parameters",
                                        "type": "object",
                                        "properties": {
                                            "assignees": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "x-go-name": "Assignees"
                                            },
                                            "color": {
                                                "type": "string",
                                                "x-go-name": "Color"
                                            },
                                            "days": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "x-go-name": "Days"
                                            },
                                            "endTime": {
                                                "type": "string",
                                                "x-go-name": "EndTime"
                                            },
                                            "id": {
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "ID"
                                            },
                                            "mappingDate": {
                                                "type": "string",
                                                "format": "date-time",
                                                "x-go-name": "MappingDate"
                                            },
                                            "mappingLength": {
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "MappingLength"
                                            },
                                            "name": {
                                                "type": "string",
                                                "x-go-name": "Name"
                                            },
                                            "shiftScheduleID": {
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "ShiftScheduleID"
                                            },
                                            "startTime": {
                                                "type": "string",
                                                "x-go-name": "StartTime"
                                            }
                                        },
                                        "x-go-package": "groupalarm.com/go/alarming/api/services"
                                    },
                                    "x-go-name": "Shifts"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/alarming/api/services"
                        }
                    }
                },
                "required": true
            },
            "UnitCreationRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "This is used for the unit creation dialog",
                            "type": "object",
                            "title": "UnitCreationRequest describes an unit creation payload",
                            "required": [
                                "name",
                                "description",
                                "organizationID",
                                "unitParts"
                            ],
                            "properties": {
                                "description": {
                                    "description": "user given description for this unit",
                                    "type": "string",
                                    "x-go-name": "Description"
                                },
                                "name": {
                                    "description": "user given name for this unit",
                                    "type": "string",
                                    "x-go-name": "Name"
                                },
                                "organizationID": {
                                    "description": "id from assigned organization",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "OrganizationID"
                                },
                                "unitParts": {
                                    "description": "assigned unit parts for labels and their amounts",
                                    "type": "array",
                                    "items": {
                                        "description": "This is used for the unit creation dialog and unit parts inside the unit creation payload",
                                        "type": "object",
                                        "title": "UnitPartCreationRequest describes an unit part creation payload",
                                        "properties": {
                                            "amount": {
                                                "description": "Amount of users for the defined label",
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "Amount"
                                            },
                                            "labelID": {
                                                "description": "ID of the assigned label",
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "LabelID"
                                            },
                                            "unitID": {
                                                "description": "ID of the unit",
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "UnitID"
                                            }
                                        },
                                        "x-go-package": "groupalarm.com/go/alarming/api/services"
                                    },
                                    "x-go-name": "UnitParts"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/alarming/api/services"
                        }
                    }
                },
                "required": true
            }
        },
        "securitySchemes": {
            "API_Token": {
                "description": "To use this API, you need an API-Token from the RBAC settings of your GroupAlarm organization. Place the token inside the HTTP-Header `API-Token` for every request, otherwise the API will return an \"401 Unauthorized\" error for your request.",
                "type": "apiKey",
                "name": "API-TOKEN",
                "in": "header"
            },
            "Personal-Access-Token": {
                "description": "To use this API, you need a Personal Access Token from your profile settings. Place the token inside the HTTP-Header `Personal-Access-Token` for every request, otherwise the API will return an \"401 Unauthorized\" error for your request.",
                "type": "apiKey",
                "name": "Personal-Access-Token",
                "in": "header"
            }
        },
        "schemas": {
            "AccessAllowedResponse": {
                "description": "AccessAllowedResponse contains whether the organization allows access or not",
                "type": "object",
                "properties": {
                    "accessAllowed": {
                        "type": "boolean",
                        "x-go-name": "AccessAllowed"
                    }
                },
                "x-go-package": "groupalarm.com/go/support/api/services"
            },
            "ActiveInstructionCatalog": {
                "description": "ActiveInstructionCatalog defines a composition of instructions used in an active alarm",
                "type": "object",
                "properties": {
                    "activeInstructions": {
                        "type": "array",
                        "items": {
                            "description": "Instruction defines a single instruction",
                            "type": "object",
                            "properties": {
                                "activeID": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ActiveInstructionID"
                                },
                                "alarmID": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "AlarmID"
                                },
                                "catalogID": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "CatalogID"
                                },
                                "description": {
                                    "type": "string",
                                    "x-go-name": "Description"
                                },
                                "directAction": {
                                    "description": "PropertyMap is used as container for additional data in alarms or messages\nit can be stored and retrieved easily in our Postgres database",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object"
                                    },
                                    "x-go-package": "groupalarm.com/go/common"
                                },
                                "endTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "x-go-name": "EndTime"
                                },
                                "endUser": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "EndUser"
                                },
                                "id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ID"
                                },
                                "name": {
                                    "type": "string",
                                    "x-go-name": "Name"
                                },
                                "nextInstructions": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "x-go-name": "NextInstructions"
                                },
                                "previousInstructions": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "x-go-name": "PreviousInstructions"
                                },
                                "startTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "x-go-name": "StartTime"
                                },
                                "startUser": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "StartUser"
                                },
                                "userComment": {
                                    "type": "string",
                                    "x-go-name": "UserComment"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/instruction/api/services"
                        },
                        "x-go-name": "ActiveInstructions"
                    },
                    "alarmID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "AlarmID"
                    },
                    "instructionCatalogID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "InstructionCatalogID"
                    },
                    "scenarioID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ScenarioID"
                    }
                },
                "x-go-package": "groupalarm.com/go/instruction/api/services"
            },
            "Alarm": {
                "description": "This is used for the interaction with alarms",
                "type": "object",
                "title": "Alarm describes an alarm payload",
                "required": [
                    "id",
                    "message",
                    "mode",
                    "startDate",
                    "event",
                    "organizationID",
                    "scenario",
                    "feedback",
                    "success",
                    "isDemo",
                    "strength",
                    "optionalContent"
                ],
                "properties": {
                    "endDate": {
                        "description": "time, when alarm was closed",
                        "type": "string",
                        "format": "date-time",
                        "x-go-name": "EndTime"
                    },
                    "event": {
                        "description": "Event describes an event payload",
                        "type": "object",
                        "required": [
                            "name",
                            "startDate",
                            "organizationID"
                        ],
                        "properties": {
                            "endDate": {
                                "description": "time where this event was closed",
                                "type": "string",
                                "format": "date-time",
                                "x-go-name": "EndDate"
                            },
                            "id": {
                                "description": "id for this event",
                                "type": "integer",
                                "format": "int64",
                                "x-go-name": "ID"
                            },
                            "name": {
                                "description": "user given name for this event",
                                "type": "string",
                                "x-go-name": "Name"
                            },
                            "organizationID": {
                                "description": "organization assignment by organization ID",
                                "type": "integer",
                                "format": "int64",
                                "x-go-name": "OrganizationID"
                            },
                            "scheduledEndtime": {
                                "description": "time this event is scheduled for close",
                                "type": "string",
                                "format": "date-time",
                                "x-go-name": "ScheduledEndtime"
                            },
                            "startDate": {
                                "description": "time where this event starts",
                                "type": "string",
                                "format": "date-time",
                                "x-go-name": "StartDate"
                            }
                        },
                        "x-go-package": "groupalarm.com/go/alarming/api/services"
                    },
                    "feedback": {
                        "description": "all feedback payloads for all notified users",
                        "type": "array",
                        "items": {
                            "description": "Feedback describes a feedback payload",
                            "type": "object",
                            "properties": {
                                "alarmID": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "AlarmID"
                                },
                                "feedback": {
                                    "type": "boolean",
                                    "x-go-name": "Feedback"
                                },
                                "labelID": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "LabelID"
                                },
                                "state": {
                                    "type": "string",
                                    "x-go-name": "State"
                                },
                                "unitID": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "UnitID"
                                },
                                "userID": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "UserID"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/alarming/api/services"
                        },
                        "x-go-name": "Feedback"
                    },
                    "feedbackPercentage": {
                        "description": "FeedbackPercentage describes the percentage of an alarm feedback",
                        "type": "object",
                        "properties": {
                            "negative": {
                                "type": "number",
                                "format": "double",
                                "x-go-name": "Negative"
                            },
                            "positive": {
                                "type": "number",
                                "format": "double",
                                "x-go-name": "Positive"
                            },
                            "unknown": {
                                "type": "number",
                                "format": "double",
                                "x-go-name": "Unknown"
                            }
                        },
                        "x-go-package": "groupalarm.com/go/alarming/api/services"
                    },
                    "id": {
                        "description": "id for this alarm",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "ID"
                    },
                    "isDemo": {
                        "description": "demo alarms/organizations use a demo algorithm for positioning",
                        "type": "boolean",
                        "x-go-name": "IsDemo"
                    },
                    "message": {
                        "description": "alarm message",
                        "type": "string",
                        "x-go-name": "Message"
                    },
                    "mode": {
                        "description": "alarm mode (strict|best-effort)",
                        "type": "string",
                        "x-go-name": "Mode"
                    },
                    "optionalContent": {
                        "description": "PropertyMap is used as container for additional data in alarms or messages\nit can be stored and retrieved easily in our Postgres database",
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "x-go-package": "groupalarm.com/go/common"
                    },
                    "organizationID": {
                        "description": "id of organization for this alarm/event",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "scenario": {},
                    "startDate": {
                        "description": "time, when alarm was started",
                        "type": "string",
                        "format": "date-time",
                        "x-go-name": "StartTime"
                    },
                    "strength": {},
                    "success": {
                        "description": "successful alarm; true, when all positions are fulfilled",
                        "type": "boolean",
                        "x-go-name": "Success"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "AlarmCreationRequest": {
                "description": "This is used for an alarm creation",
                "type": "object",
                "title": "AlarmCreationRequest defines an alarm creation payload",
                "required": [
                    "organizationID",
                    "message",
                    "mode",
                    "startTime"
                ],
                "properties": {
                    "alarmTemplateID": {
                        "description": "Alarm message template ID",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "AlarmTemplateID"
                    },
                    "eventID": {
                        "description": "id of an existing event",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "EventID"
                    },
                    "eventName": {
                        "description": "Name of an event; if event name is passed, a new event will be created with the passed name",
                        "type": "string",
                        "x-go-name": "EventName"
                    },
                    "labels": {
                        "description": "list of labels to alarm",
                        "type": "array",
                        "minimum": 1,
                        "items": {
                            "description": "This is used for an alarm creation",
                            "type": "object",
                            "title": "AlarmCreationRequestLabel defines an alarm creation label payload",
                            "properties": {
                                "amount": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "Amount"
                                },
                                "labelID": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "LabelID"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/alarming/api/services"
                        },
                        "x-go-name": "Labels"
                    },
                    "message": {
                        "description": "Alarm message",
                        "type": "string",
                        "x-go-name": "Message"
                    },
                    "mode": {
                        "description": "Alarm mode (strict|best-effort)",
                        "type": "string",
                        "x-go-name": "Mode"
                    },
                    "optionalContent": {
                        "description": "PropertyMap is used as container for additional data in alarms or messages\nit can be stored and retrieved easily in our Postgres database",
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "x-go-package": "groupalarm.com/go/common"
                    },
                    "organizationID": {
                        "description": "ID of the organization to create the alarm as",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "scenarioID": {
                        "description": "id from the scenario",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "ScenarioID"
                    },
                    "startTime": {
                        "description": "Start time for this alarm",
                        "type": "string",
                        "format": "date-time",
                        "x-go-name": "StartTime"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "AlarmCreationRequestLabel": {
                "description": "This is used for an alarm creation",
                "type": "object",
                "title": "AlarmCreationRequestLabel defines an alarm creation label payload",
                "properties": {
                    "amount": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "Amount"
                    },
                    "labelID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "LabelID"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "AlarmID": {
                "description": "AlarmID contains the id of an alarm",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "AlarmList": {
                "description": "This is used for an alarm creation",
                "type": "object",
                "title": "AlarmList defines an alarm list payload",
                "properties": {
                    "alarms": {
                        "description": "array of alarm payloads",
                        "type": "array",
                        "items": {},
                        "x-go-name": "Alarms"
                    },
                    "strength": {},
                    "totalAlarms": {
                        "description": "amount of alarms inside the payload",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "TotalAlarms"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "AlarmPreview": {
                "description": "This is used for an alarm-scenario preview",
                "type": "object",
                "title": "AlarmPreview defines the alarm preview payload",
                "required": [
                    "scenario",
                    "plan"
                ],
                "properties": {
                    "plan": {
                        "description": "plan payloads for this preview",
                        "type": "array",
                        "items": {
                            "description": "Position represents a position in the alarm that is fulfilled by a user",
                            "type": "object",
                            "properties": {
                                "labelID": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "LabelID"
                                },
                                "unitID": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "UnitID"
                                },
                                "userID": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "UserID"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/alarming/api/services"
                        },
                        "x-go-name": "Plan"
                    },
                    "positionsFulfilled": {
                        "description": "indicates that the alarm positions in this preview are fulfilled",
                        "type": "boolean",
                        "x-go-name": "PositionsFulfilled"
                    },
                    "scenario": {}
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "AlarmService": {
                "description": "AlarmService defines all required methods to interact with alarms",
                "type": "object",
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "AlarmTemplate": {
                "description": "AlarmTemplate defines an alarm template payload",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    },
                    "message": {
                        "type": "string",
                        "x-go-name": "Message"
                    },
                    "name": {
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "organizationID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "AvailableUsers": {
                "description": "AvailableUsers payload",
                "type": "object",
                "properties": {
                    "countAvailable": {
                        "description": "count of available users",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "CountAvailable"
                    },
                    "countInEvent": {
                        "description": "count of \"in-event\" users",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "CountInEvent"
                    },
                    "countNotAvailable": {
                        "description": "count of not available users",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "CountNotAvailable"
                    }
                },
                "x-go-package": "groupalarm.com/go/organization/api/services"
            },
            "Certificate": {
                "description": "Certificate contains all certificates for a given organization",
                "type": "object",
                "properties": {
                    "caChain": {
                        "type": "string",
                        "x-go-name": "CAChain"
                    },
                    "certificate": {
                        "type": "string",
                        "x-go-name": "Certificate"
                    },
                    "organizationId": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "privateKey": {
                        "type": "string",
                        "x-go-name": "PrivateKey"
                    }
                },
                "x-go-package": "groupalarm.com/go/els-cobra/api/services"
            },
            "CertificateService": {
                "description": "CertificateService provides all functions needed to get and store certificates for ISE Cobra services",
                "type": "object",
                "x-go-package": "groupalarm.com/go/els-cobra/api/services"
            },
            "CredentialService": {
                "description": "CredentialService provides all functions needed to get and store credentials for ISE Cobra services",
                "type": "object",
                "x-go-package": "groupalarm.com/go/els-cobra/api/services"
            },
            "Credentials": {
                "description": "Credentials contains a single service's credentials for a given organization",
                "type": "object",
                "properties": {
                    "organizationId": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "password": {
                        "type": "string",
                        "x-go-name": "Password"
                    },
                    "serviceName": {
                        "type": "string",
                        "x-go-name": "ServiceName"
                    },
                    "url": {
                        "type": "string",
                        "x-go-name": "URL"
                    },
                    "username": {
                        "type": "string",
                        "x-go-name": "Username"
                    }
                },
                "x-go-package": "groupalarm.com/go/els-cobra/api/services"
            },
            "Event": {
                "description": "Event describes an event payload",
                "type": "object",
                "required": [
                    "name",
                    "startDate",
                    "organizationID"
                ],
                "properties": {
                    "endDate": {
                        "description": "time where this event was closed",
                        "type": "string",
                        "format": "date-time",
                        "x-go-name": "EndDate"
                    },
                    "id": {
                        "description": "id for this event",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    },
                    "name": {
                        "description": "user given name for this event",
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "organizationID": {
                        "description": "organization assignment by organization ID",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "scheduledEndtime": {
                        "description": "time this event is scheduled for close",
                        "type": "string",
                        "format": "date-time",
                        "x-go-name": "ScheduledEndtime"
                    },
                    "startDate": {
                        "description": "time where this event starts",
                        "type": "string",
                        "format": "date-time",
                        "x-go-name": "StartDate"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "EventCreationItem": {
                "description": "EventCreationItem is used by the different services to create a new audit-log item",
                "type": "object",
                "properties": {
                    "data": {
                        "type": "string",
                        "x-go-name": "Data"
                    },
                    "organizationID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "service": {
                        "type": "string",
                        "x-go-name": "Service"
                    },
                    "type": {
                        "type": "string",
                        "x-go-name": "Type"
                    },
                    "userID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "UserID"
                    }
                },
                "x-go-package": "groupalarm.com/go/audit/api/services"
            },
            "EventList": {
                "description": "An EventList contains multiple EventListItems and a TotalEvents count used for pagination",
                "type": "object",
                "properties": {
                    "events": {
                        "description": "event array with events",
                        "type": "array",
                        "items": {
                            "description": "An EventListItem is used as a single audit-log entry in an EventList",
                            "type": "object",
                            "properties": {
                                "data": {
                                    "description": "data for view",
                                    "type": "string",
                                    "x-go-name": "Data"
                                },
                                "id": {
                                    "description": "id of this item",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ID"
                                },
                                "organizationID": {
                                    "description": "connected organization as ID",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "OrganizationID"
                                },
                                "service": {
                                    "description": "affected service / entity-type",
                                    "type": "string",
                                    "x-go-name": "Service"
                                },
                                "timestamp": {
                                    "description": "timestamp, when action was logged",
                                    "type": "string",
                                    "x-go-name": "Timestamp"
                                },
                                "type": {
                                    "description": "action type [create, edit, delete]",
                                    "type": "string",
                                    "x-go-name": "Type"
                                },
                                "user": {
                                    "description": "User is a basic copy of user-service's PublicUser",
                                    "type": "object",
                                    "properties": {
                                        "email": {
                                            "type": "string",
                                            "x-go-name": "EMail"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "ID"
                                        },
                                        "name": {
                                            "type": "string",
                                            "x-go-name": "Name"
                                        },
                                        "surname": {
                                            "type": "string",
                                            "x-go-name": "Surname"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/audit/api/services"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/audit/api/services"
                        },
                        "x-go-name": "Events"
                    },
                    "totalEvents": {
                        "description": "total amount of events inside the events array",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "TotalEvents"
                    }
                },
                "x-go-package": "groupalarm.com/go/audit/api/services"
            },
            "EventListItem": {
                "description": "An EventListItem is used as a single audit-log entry in an EventList",
                "type": "object",
                "properties": {
                    "data": {
                        "description": "data for view",
                        "type": "string",
                        "x-go-name": "Data"
                    },
                    "id": {
                        "description": "id of this item",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    },
                    "organizationID": {
                        "description": "connected organization as ID",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "service": {
                        "description": "affected service / entity-type",
                        "type": "string",
                        "x-go-name": "Service"
                    },
                    "timestamp": {
                        "description": "timestamp, when action was logged",
                        "type": "string",
                        "x-go-name": "Timestamp"
                    },
                    "type": {
                        "description": "action type [create, edit, delete]",
                        "type": "string",
                        "x-go-name": "Type"
                    },
                    "user": {
                        "description": "User is a basic copy of user-service's PublicUser",
                        "type": "object",
                        "properties": {
                            "email": {
                                "type": "string",
                                "x-go-name": "EMail"
                            },
                            "id": {
                                "type": "integer",
                                "format": "int64",
                                "x-go-name": "ID"
                            },
                            "name": {
                                "type": "string",
                                "x-go-name": "Name"
                            },
                            "surname": {
                                "type": "string",
                                "x-go-name": "Surname"
                            }
                        },
                        "x-go-package": "groupalarm.com/go/audit/api/services"
                    }
                },
                "x-go-package": "groupalarm.com/go/audit/api/services"
            },
            "EventService": {
                "description": "EventService provides all methods needed to list and create audit-log entries",
                "type": "object",
                "x-go-package": "groupalarm.com/go/audit/api/services"
            },
            "Feature": {
                "description": "Feature contains all information about a single feature",
                "type": "object",
                "properties": {
                    "category": {
                        "type": "string",
                        "x-go-name": "Category"
                    },
                    "categoryDisplayName": {
                        "type": "string",
                        "x-go-name": "CategoryDisplayName"
                    },
                    "color": {
                        "type": "string",
                        "x-go-name": "Color"
                    },
                    "defaultPrice": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "DefaultPrice"
                    },
                    "description": {
                        "type": "string",
                        "x-go-name": "Description"
                    },
                    "displayName": {
                        "type": "string",
                        "x-go-name": "DisplayName"
                    },
                    "icon": {
                        "type": "string",
                        "x-go-name": "Icon"
                    },
                    "markedForDeactivation": {
                        "type": "boolean",
                        "x-go-name": "MarkedForDeactivation"
                    },
                    "name": {
                        "type": "string",
                        "x-go-name": "Name"
                    }
                },
                "x-go-package": "groupalarm.com/go/shop/api/services"
            },
            "FeatureIntegration": {
                "description": "FeatureIntegration contains all data used to integrate our shop with all other services",
                "type": "object",
                "x-go-package": "groupalarm.com/go/shop/client"
            },
            "FeatureRegistryService": {
                "description": "FeatureRegistryService provides all functions needed to manage a feature registry",
                "type": "object",
                "x-go-package": "groupalarm.com/go/shop/api/services"
            },
            "Feedback": {
                "description": "Feedback describes a feedback payload",
                "type": "object",
                "properties": {
                    "alarmID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "AlarmID"
                    },
                    "feedback": {
                        "type": "boolean",
                        "x-go-name": "Feedback"
                    },
                    "labelID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "LabelID"
                    },
                    "state": {
                        "type": "string",
                        "x-go-name": "State"
                    },
                    "unitID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "UnitID"
                    },
                    "userID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "UserID"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "FeedbackBucketService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "FeedbackPercentage": {
                "description": "FeedbackPercentage describes the percentage of an alarm feedback",
                "type": "object",
                "properties": {
                    "negative": {
                        "type": "number",
                        "format": "double",
                        "x-go-name": "Negative"
                    },
                    "positive": {
                        "type": "number",
                        "format": "double",
                        "x-go-name": "Positive"
                    },
                    "unknown": {
                        "type": "number",
                        "format": "double",
                        "x-go-name": "Unknown"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "Instruction": {
                "description": "Instruction defines a single instruction",
                "type": "object",
                "properties": {
                    "activeID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ActiveInstructionID"
                    },
                    "alarmID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "AlarmID"
                    },
                    "catalogID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "CatalogID"
                    },
                    "description": {
                        "type": "string",
                        "x-go-name": "Description"
                    },
                    "directAction": {
                        "description": "PropertyMap is used as container for additional data in alarms or messages\nit can be stored and retrieved easily in our Postgres database",
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "x-go-package": "groupalarm.com/go/common"
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date-time",
                        "x-go-name": "EndTime"
                    },
                    "endUser": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "EndUser"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    },
                    "name": {
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "nextInstructions": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-go-name": "NextInstructions"
                    },
                    "previousInstructions": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-go-name": "PreviousInstructions"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "x-go-name": "StartTime"
                    },
                    "startUser": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "StartUser"
                    },
                    "userComment": {
                        "type": "string",
                        "x-go-name": "UserComment"
                    }
                },
                "x-go-package": "groupalarm.com/go/instruction/api/services"
            },
            "InstructionCatalog": {
                "description": "InstructionCatalog defines a composition of instructions",
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "x-go-name": "Description"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    },
                    "instructions": {
                        "type": "array",
                        "items": {
                            "description": "Instruction defines a single instruction",
                            "type": "object",
                            "properties": {
                                "activeID": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ActiveInstructionID"
                                },
                                "alarmID": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "AlarmID"
                                },
                                "catalogID": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "CatalogID"
                                },
                                "description": {
                                    "type": "string",
                                    "x-go-name": "Description"
                                },
                                "directAction": {
                                    "description": "PropertyMap is used as container for additional data in alarms or messages\nit can be stored and retrieved easily in our Postgres database",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object"
                                    },
                                    "x-go-package": "groupalarm.com/go/common"
                                },
                                "endTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "x-go-name": "EndTime"
                                },
                                "endUser": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "EndUser"
                                },
                                "id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ID"
                                },
                                "name": {
                                    "type": "string",
                                    "x-go-name": "Name"
                                },
                                "nextInstructions": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "x-go-name": "NextInstructions"
                                },
                                "previousInstructions": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "x-go-name": "PreviousInstructions"
                                },
                                "startTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "x-go-name": "StartTime"
                                },
                                "startUser": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "StartUser"
                                },
                                "userComment": {
                                    "type": "string",
                                    "x-go-name": "UserComment"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/instruction/api/services"
                        },
                        "x-go-name": "Instructions"
                    },
                    "name": {
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "organizationID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    }
                },
                "x-go-package": "groupalarm.com/go/instruction/api/services"
            },
            "InstructionCatalogList": {
                "description": "InstructionCatalogList defines a list of catalogs for pagination",
                "type": "object",
                "properties": {
                    "catalogs": {
                        "type": "array",
                        "items": {
                            "description": "InstructionCatalog defines a composition of instructions",
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "x-go-name": "Description"
                                },
                                "id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ID"
                                },
                                "instructions": {
                                    "type": "array",
                                    "items": {
                                        "description": "Instruction defines a single instruction",
                                        "type": "object",
                                        "properties": {
                                            "activeID": {
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "ActiveInstructionID"
                                            },
                                            "alarmID": {
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "AlarmID"
                                            },
                                            "catalogID": {
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "CatalogID"
                                            },
                                            "description": {
                                                "type": "string",
                                                "x-go-name": "Description"
                                            },
                                            "directAction": {
                                                "description": "PropertyMap is used as container for additional data in alarms or messages\nit can be stored and retrieved easily in our Postgres database",
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "x-go-package": "groupalarm.com/go/common"
                                            },
                                            "endTime": {
                                                "type": "string",
                                                "format": "date-time",
                                                "x-go-name": "EndTime"
                                            },
                                            "endUser": {
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "EndUser"
                                            },
                                            "id": {
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "ID"
                                            },
                                            "name": {
                                                "type": "string",
                                                "x-go-name": "Name"
                                            },
                                            "nextInstructions": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "x-go-name": "NextInstructions"
                                            },
                                            "previousInstructions": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "x-go-name": "PreviousInstructions"
                                            },
                                            "startTime": {
                                                "type": "string",
                                                "format": "date-time",
                                                "x-go-name": "StartTime"
                                            },
                                            "startUser": {
                                                "type": "integer",
                                                "format": "int64",
                                                "x-go-name": "StartUser"
                                            },
                                            "userComment": {
                                                "type": "string",
                                                "x-go-name": "UserComment"
                                            }
                                        },
                                        "x-go-package": "groupalarm.com/go/instruction/api/services"
                                    },
                                    "x-go-name": "Instructions"
                                },
                                "name": {
                                    "type": "string",
                                    "x-go-name": "Name"
                                },
                                "organizationID": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "OrganizationID"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/instruction/api/services"
                        },
                        "x-go-name": "Catalogs"
                    },
                    "totalCatalogs": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "TotalCatalogs"
                    }
                },
                "x-go-package": "groupalarm.com/go/instruction/api/services"
            },
            "KeywordList": {
                "description": "KeywordList represents a list of KeywordScenarios for an organization",
                "type": "object",
                "properties": {
                    "keywordScenarioList": {
                        "type": "array",
                        "items": {
                            "description": "KeywordScenario contains all four keywords, their scenarioIDs and a priority",
                            "type": "object",
                            "properties": {
                                "keyword_1": {
                                    "type": "string",
                                    "x-go-name": "Keyword1"
                                },
                                "keyword_2": {
                                    "type": "string",
                                    "x-go-name": "Keyword2"
                                },
                                "priority": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "Priority"
                                },
                                "scenarioIds": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "x-go-name": "ScenarioIDs"
                                },
                                "type_1": {
                                    "type": "string",
                                    "x-go-name": "Type1"
                                },
                                "type_2": {
                                    "type": "string",
                                    "x-go-name": "Type2"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/els-cobra/api/services"
                        },
                        "x-go-name": "KeywordScenarioList"
                    },
                    "organizationId": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    }
                },
                "x-go-package": "groupalarm.com/go/els-cobra/api/services"
            },
            "KeywordScenario": {
                "description": "KeywordScenario contains all four keywords, their scenarioIDs and a priority",
                "type": "object",
                "properties": {
                    "keyword_1": {
                        "type": "string",
                        "x-go-name": "Keyword1"
                    },
                    "keyword_2": {
                        "type": "string",
                        "x-go-name": "Keyword2"
                    },
                    "priority": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "Priority"
                    },
                    "scenarioIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-go-name": "ScenarioIDs"
                    },
                    "type_1": {
                        "type": "string",
                        "x-go-name": "Type1"
                    },
                    "type_2": {
                        "type": "string",
                        "x-go-name": "Type2"
                    }
                },
                "x-go-package": "groupalarm.com/go/els-cobra/api/services"
            },
            "KeywordService": {
                "description": "KeywordService provides all functions needed to get, store and match keywords with their scenarios",
                "type": "object",
                "x-go-package": "groupalarm.com/go/els-cobra/api/services"
            },
            "Label": {
                "description": "This is used for the interaction with alarms",
                "type": "object",
                "title": "Label describes a label payload",
                "required": [
                    "organizationID",
                    "name",
                    "color"
                ],
                "properties": {
                    "assignees": {
                        "description": "assigned user for this label",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-go-name": "Assignees"
                    },
                    "color": {
                        "description": "hex color code",
                        "type": "string",
                        "x-go-name": "Color"
                    },
                    "description": {
                        "description": "description for this labels",
                        "type": "string",
                        "x-go-name": "Description"
                    },
                    "id": {
                        "description": "id for this label",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    },
                    "name": {
                        "description": "name of this label",
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "organizationID": {
                        "description": "organization id for this label",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "substitute": {}
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "LabelService": {
                "description": "LabelService defines all required methods to interact with labels",
                "type": "object",
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "LabelStrength": {
                "description": "This payload connects labels with an amount of user for a strength",
                "type": "object",
                "title": "LabelStrength describes a strength payload",
                "required": [
                    "amount",
                    "label"
                ],
                "properties": {
                    "amount": {
                        "description": "amount of strength members for a specific alarm",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "Amount"
                    },
                    "label": {}
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "Login": {
                "description": "Login contains a single organization's login data",
                "type": "object",
                "properties": {
                    "organizationId": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "url": {
                        "type": "string",
                        "x-go-name": "URL"
                    }
                },
                "x-go-package": "groupalarm.com/go/els-cobra/api/services"
            },
            "LoginService": {
                "description": "LoginService provides all functions needed to get and store login data for organizations",
                "type": "object",
                "x-go-package": "groupalarm.com/go/els-cobra/api/services"
            },
            "MergedUserRole": {
                "type": "object",
                "properties": {
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "name",
                                "organizationID"
                            ],
                            "properties": {
                                "description": {
                                    "description": "Optional description for this role",
                                    "type": "string",
                                    "x-go-name": "Description"
                                },
                                "id": {
                                    "description": "ID for this role",
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": 1,
                                    "x-go-name": "ID"
                                },
                                "name": {
                                    "description": "Name for this role",
                                    "type": "string",
                                    "x-go-name": "Name"
                                },
                                "organizationID": {
                                    "description": "Connected organization ID",
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": 1,
                                    "x-go-name": "OrganizationID"
                                },
                                "role_access": {
                                    "type": "array",
                                    "items": {
                                        "description": "This is used for user to role assignment",
                                        "type": "object",
                                        "title": "Definition of a user-role payload",
                                        "required": [
                                            "endpoints",
                                            "methods"
                                        ],
                                        "properties": {
                                            "endpoints": {
                                                "description": "Concerning endpoints/services",
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "x-go-name": "Endpoints"
                                            },
                                            "id": {
                                                "description": "ID of this role access",
                                                "type": "integer",
                                                "format": "int64",
                                                "minimum": 1,
                                                "x-go-name": "ID"
                                            },
                                            "methods": {
                                                "description": "Allowed HTTP methods",
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "x-go-name": "Methods"
                                            },
                                            "roleID": {
                                                "description": "ID of the role",
                                                "type": "integer",
                                                "format": "int64",
                                                "minimum": 1,
                                                "x-go-name": "RoleID"
                                            }
                                        },
                                        "x-go-package": "groupalarm.com/go/rbac/api/services"
                                    },
                                    "x-go-name": "RoleAccess"
                                },
                                "type": {
                                    "description": "Definition of default organization roles",
                                    "type": "string",
                                    "x-go-name": "Type"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/rbac/api/services"
                        },
                        "x-go-name": "Roles"
                    },
                    "userID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "UserID"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "Organization": {
                "description": "Organization payload",
                "type": "object",
                "properties": {
                    "availableUsers": {
                        "description": "AvailableUsers payload",
                        "type": "object",
                        "properties": {
                            "countAvailable": {
                                "description": "count of available users",
                                "type": "integer",
                                "format": "int64",
                                "x-go-name": "CountAvailable"
                            },
                            "countInEvent": {
                                "description": "count of \"in-event\" users",
                                "type": "integer",
                                "format": "int64",
                                "x-go-name": "CountInEvent"
                            },
                            "countNotAvailable": {
                                "description": "count of not available users",
                                "type": "integer",
                                "format": "int64",
                                "x-go-name": "CountNotAvailable"
                            }
                        },
                        "x-go-package": "groupalarm.com/go/organization/api/services"
                    },
                    "availableUsersTotal": {
                        "description": "AvailableUsers payload",
                        "type": "object",
                        "properties": {
                            "countAvailable": {
                                "description": "count of available users",
                                "type": "integer",
                                "format": "int64",
                                "x-go-name": "CountAvailable"
                            },
                            "countInEvent": {
                                "description": "count of \"in-event\" users",
                                "type": "integer",
                                "format": "int64",
                                "x-go-name": "CountInEvent"
                            },
                            "countNotAvailable": {
                                "description": "count of not available users",
                                "type": "integer",
                                "format": "int64",
                                "x-go-name": "CountNotAvailable"
                            }
                        },
                        "x-go-package": "groupalarm.com/go/organization/api/services"
                    },
                    "description": {
                        "description": "user defined description",
                        "type": "string",
                        "x-go-name": "Description"
                    },
                    "hasChildren": {
                        "description": "defines if it's the parent of any other organization",
                        "type": "boolean",
                        "x-go-name": "HasChildren"
                    },
                    "id": {
                        "description": "ID of this organization",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    },
                    "isDemo": {
                        "description": "is true, when there is no billing configuration for this organization",
                        "type": "boolean",
                        "x-go-name": "IsDemo"
                    },
                    "name": {
                        "description": "user defined name",
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "ownerIDs": {
                        "description": "user id of the organization owner/creator",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-go-name": "OwnerIDs"
                    },
                    "parentID": {
                        "description": "optional: ID of the parent organization",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ParentID"
                    }
                },
                "x-go-package": "groupalarm.com/go/organization/api/services"
            },
            "OrganizationChilds": {
                "description": "OrganizationChilds payload",
                "type": "object",
                "properties": {
                    "childs": {
                        "description": "Child organizations of the Organization",
                        "type": "array",
                        "items": {
                            "description": "Organization payload",
                            "type": "object",
                            "properties": {
                                "availableUsers": {
                                    "description": "AvailableUsers payload",
                                    "type": "object",
                                    "properties": {
                                        "countAvailable": {
                                            "description": "count of available users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountAvailable"
                                        },
                                        "countInEvent": {
                                            "description": "count of \"in-event\" users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountInEvent"
                                        },
                                        "countNotAvailable": {
                                            "description": "count of not available users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountNotAvailable"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/organization/api/services"
                                },
                                "availableUsersTotal": {
                                    "description": "AvailableUsers payload",
                                    "type": "object",
                                    "properties": {
                                        "countAvailable": {
                                            "description": "count of available users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountAvailable"
                                        },
                                        "countInEvent": {
                                            "description": "count of \"in-event\" users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountInEvent"
                                        },
                                        "countNotAvailable": {
                                            "description": "count of not available users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountNotAvailable"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/organization/api/services"
                                },
                                "description": {
                                    "description": "user defined description",
                                    "type": "string",
                                    "x-go-name": "Description"
                                },
                                "hasChildren": {
                                    "description": "defines if it's the parent of any other organization",
                                    "type": "boolean",
                                    "x-go-name": "HasChildren"
                                },
                                "id": {
                                    "description": "ID of this organization",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ID"
                                },
                                "isDemo": {
                                    "description": "is true, when there is no billing configuration for this organization",
                                    "type": "boolean",
                                    "x-go-name": "IsDemo"
                                },
                                "name": {
                                    "description": "user defined name",
                                    "type": "string",
                                    "x-go-name": "Name"
                                },
                                "ownerIDs": {
                                    "description": "user id of the organization owner/creator",
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "x-go-name": "OwnerIDs"
                                },
                                "parentID": {
                                    "description": "optional: ID of the parent organization",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ParentID"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/organization/api/services"
                        },
                        "x-go-name": "Organizations"
                    },
                    "path": {
                        "description": "Path in the tree to the Organization (e.g. for breadcrumbs)",
                        "type": "array",
                        "items": {
                            "description": "Organization payload",
                            "type": "object",
                            "properties": {
                                "availableUsers": {
                                    "description": "AvailableUsers payload",
                                    "type": "object",
                                    "properties": {
                                        "countAvailable": {
                                            "description": "count of available users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountAvailable"
                                        },
                                        "countInEvent": {
                                            "description": "count of \"in-event\" users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountInEvent"
                                        },
                                        "countNotAvailable": {
                                            "description": "count of not available users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountNotAvailable"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/organization/api/services"
                                },
                                "availableUsersTotal": {
                                    "description": "AvailableUsers payload",
                                    "type": "object",
                                    "properties": {
                                        "countAvailable": {
                                            "description": "count of available users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountAvailable"
                                        },
                                        "countInEvent": {
                                            "description": "count of \"in-event\" users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountInEvent"
                                        },
                                        "countNotAvailable": {
                                            "description": "count of not available users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountNotAvailable"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/organization/api/services"
                                },
                                "description": {
                                    "description": "user defined description",
                                    "type": "string",
                                    "x-go-name": "Description"
                                },
                                "hasChildren": {
                                    "description": "defines if it's the parent of any other organization",
                                    "type": "boolean",
                                    "x-go-name": "HasChildren"
                                },
                                "id": {
                                    "description": "ID of this organization",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ID"
                                },
                                "isDemo": {
                                    "description": "is true, when there is no billing configuration for this organization",
                                    "type": "boolean",
                                    "x-go-name": "IsDemo"
                                },
                                "name": {
                                    "description": "user defined name",
                                    "type": "string",
                                    "x-go-name": "Name"
                                },
                                "ownerIDs": {
                                    "description": "user id of the organization owner/creator",
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "x-go-name": "OwnerIDs"
                                },
                                "parentID": {
                                    "description": "optional: ID of the parent organization",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ParentID"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/organization/api/services"
                        },
                        "x-go-name": "Path"
                    },
                    "totalChilds": {
                        "description": "total amount of children",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "TotalChilds"
                    }
                },
                "x-go-package": "groupalarm.com/go/organization/api/services"
            },
            "OrganizationList": {
                "description": "OrganizationList payload",
                "type": "object",
                "properties": {
                    "organizations": {
                        "type": "array",
                        "items": {
                            "description": "Organization payload",
                            "type": "object",
                            "properties": {
                                "availableUsers": {
                                    "description": "AvailableUsers payload",
                                    "type": "object",
                                    "properties": {
                                        "countAvailable": {
                                            "description": "count of available users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountAvailable"
                                        },
                                        "countInEvent": {
                                            "description": "count of \"in-event\" users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountInEvent"
                                        },
                                        "countNotAvailable": {
                                            "description": "count of not available users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountNotAvailable"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/organization/api/services"
                                },
                                "availableUsersTotal": {
                                    "description": "AvailableUsers payload",
                                    "type": "object",
                                    "properties": {
                                        "countAvailable": {
                                            "description": "count of available users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountAvailable"
                                        },
                                        "countInEvent": {
                                            "description": "count of \"in-event\" users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountInEvent"
                                        },
                                        "countNotAvailable": {
                                            "description": "count of not available users",
                                            "type": "integer",
                                            "format": "int64",
                                            "x-go-name": "CountNotAvailable"
                                        }
                                    },
                                    "x-go-package": "groupalarm.com/go/organization/api/services"
                                },
                                "description": {
                                    "description": "user defined description",
                                    "type": "string",
                                    "x-go-name": "Description"
                                },
                                "hasChildren": {
                                    "description": "defines if it's the parent of any other organization",
                                    "type": "boolean",
                                    "x-go-name": "HasChildren"
                                },
                                "id": {
                                    "description": "ID of this organization",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ID"
                                },
                                "isDemo": {
                                    "description": "is true, when there is no billing configuration for this organization",
                                    "type": "boolean",
                                    "x-go-name": "IsDemo"
                                },
                                "name": {
                                    "description": "user defined name",
                                    "type": "string",
                                    "x-go-name": "Name"
                                },
                                "ownerIDs": {
                                    "description": "user id of the organization owner/creator",
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "x-go-name": "OwnerIDs"
                                },
                                "parentID": {
                                    "description": "optional: ID of the parent organization",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ParentID"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/organization/api/services"
                        },
                        "x-go-name": "Organizations"
                    },
                    "totalOrganizations": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "TotalOrganizations"
                    }
                },
                "x-go-package": "groupalarm.com/go/organization/api/services"
            },
            "OrganizationService": {
                "description": "OrganizationService provides all functions needed to check for expired accesses to organizations",
                "type": "object",
                "properties": {
                    "CheckForExpiredAccesses": {
                        "type": "string"
                    }
                },
                "x-go-package": "groupalarm.com/go/support/api/services"
            },
            "OrganizationUserCount": {
                "description": "OrganizationUserCount allows us to save the amount of users in an organization",
                "type": "object",
                "properties": {
                    "organizationID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "userCount": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "UserCount"
                    }
                },
                "x-go-package": "groupalarm.com/go/organization/api/services"
            },
            "PersonalAccessToken": {
                "description": "This is used for personal access token interaction",
                "type": "object",
                "title": "Definition of a personal access token payload",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    },
                    "name": {
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "token": {
                        "type": "string",
                        "x-go-name": "Token"
                    },
                    "userID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "UserID"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PersonalAccessTokenRequest": {
                "description": "This is used for creation of personal access tokens",
                "type": "object",
                "title": "Definition of a personal access token request payload",
                "properties": {
                    "name": {
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "userID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "UserID"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PersonalAccessTokenService": {
                "description": "PersonalAccessTokenService contains all methods needed to implement our service",
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "Position": {
                "description": "Position represents a position in the alarm that is fulfilled by a user",
                "type": "object",
                "properties": {
                    "labelID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "LabelID"
                    },
                    "unitID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "UnitID"
                    },
                    "userID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "UserID"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "PositionCount": {
                "description": "PositionCount contains the amount and actual count of a position",
                "type": "object",
                "properties": {
                    "Amount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Count": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "PositionCountMap": {
                "description": "PositionCountMap contains all counted positions in a map",
                "type": "object",
                "additionalProperties": {
                    "description": "PositionCount contains the amount and actual count of a position",
                    "type": "object",
                    "properties": {
                        "Amount": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "Count": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "x-go-package": "groupalarm.com/go/alarming/api/services"
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "PostgresAlarmService": {
                "description": "PostgresAlarmService implements the methods of the AlarmService\nand contains all required resources",
                "type": "object",
                "properties": {
                    "EventService": {
                        "description": "EventService provides all methods needed to list and create audit-log entries",
                        "type": "object",
                        "x-go-package": "groupalarm.com/go/audit/api/services"
                    },
                    "FeatureIntegration": {
                        "description": "FeatureIntegration contains all data used to integrate our shop with all other services",
                        "type": "object",
                        "x-go-package": "groupalarm.com/go/shop/client"
                    },
                    "FeedbackBucketService": {
                        "type": "object",
                        "x-go-package": "groupalarm.com/go/alarming/api/services"
                    },
                    "LabelService": {
                        "description": "LabelService defines all required methods to interact with labels",
                        "type": "object",
                        "x-go-package": "groupalarm.com/go/alarming/api/services"
                    },
                    "ScenarioService": {
                        "description": "ScenarioService defines all required methods for interacting with scenarios",
                        "type": "object",
                        "x-go-package": "groupalarm.com/go/alarming/api/services"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "PostgresCertificateService": {
                "description": "PostgresCertificateService is our implementation of CertificateService",
                "type": "object",
                "x-go-package": "groupalarm.com/go/els-cobra/api/services"
            },
            "PostgresCredentialService": {
                "description": "PostgresCredentialService is our implementation of CredentialService",
                "type": "object",
                "x-go-package": "groupalarm.com/go/els-cobra/api/services"
            },
            "PostgresEventService": {
                "description": "PostgresEventService is our implementation of EventService using a Postgres database",
                "type": "object",
                "x-go-package": "groupalarm.com/go/audit/api/services"
            },
            "PostgresFeatureRegistryService": {
                "description": "PostgresFeatureRegistryService is our implementation of FeatureRegistryService using a Postgres database",
                "type": "object",
                "x-go-package": "groupalarm.com/go/shop/api/services"
            },
            "PostgresKeywordService": {
                "description": "PostgresKeywordService is our implementation of KeywordService",
                "type": "object",
                "x-go-package": "groupalarm.com/go/els-cobra/api/services"
            },
            "PostgresLabelService": {
                "description": "PostgresLabelService implements all methods of the LabelService\nand contains all required resources",
                "type": "object",
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "PostgresLoginService": {
                "description": "PostgresLoginService is our implementation of LoginService",
                "type": "object",
                "x-go-package": "groupalarm.com/go/els-cobra/api/services"
            },
            "PostgresOrganizationService": {
                "description": "PostgresOrganizationService is our implementation of OrganizationService using a Postgres database",
                "type": "object",
                "x-go-package": "groupalarm.com/go/support/api/services"
            },
            "PostgresPersonalAccessTokenService": {
                "description": "PostgresPersonalAccessTokenService is our PersonalAccessTokenService implementation using a database",
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PostgresRoleAccessService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PostgresRoleService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PostgresScenarioService": {
                "description": "PostgresScenarioService implements all required methods of the ScenarioService interface",
                "type": "object",
                "properties": {
                    "UnitService": {
                        "description": "UnitService defines all methods for operations in the Unit Domain",
                        "type": "object",
                        "x-go-package": "groupalarm.com/go/alarming/api/services"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "PostgresServiceService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PostgresShiftScheduleService": {
                "description": "PostgresShiftScheduleService is our implementation of ShiftScheduleService",
                "type": "object",
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "PostgresSupportAgentService": {
                "description": "PostgresSupportAgentService is our implementation of SupportAgentService using a Postgres database",
                "type": "object",
                "x-go-package": "groupalarm.com/go/support/api/services"
            },
            "PostgresTokenService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PostgresUnitService": {
                "description": "PostgresUnitService implements all methods of the UnitService\nand contains all required resources",
                "type": "object",
                "properties": {
                    "LabelService": {
                        "description": "LabelService defines all required methods to interact with labels",
                        "type": "object",
                        "x-go-package": "groupalarm.com/go/alarming/api/services"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "PostgresUserRolesService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "PropertyMap": {
                "description": "PropertyMap is used as container for additional data in alarms or messages\nit can be stored and retrieved easily in our Postgres database",
                "type": "object",
                "additionalProperties": {
                    "type": "object"
                },
                "x-go-package": "groupalarm.com/go/common"
            },
            "Role": {
                "description": "This is used for role interaction",
                "type": "object",
                "title": "Definition of a role payload",
                "required": [
                    "name",
                    "organizationID"
                ],
                "properties": {
                    "description": {
                        "description": "Optional description for this role",
                        "type": "string",
                        "x-go-name": "Description"
                    },
                    "id": {
                        "description": "ID for this role",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "ID"
                    },
                    "name": {
                        "description": "Name for this role",
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "organizationID": {
                        "description": "Connected organization ID",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "OrganizationID"
                    },
                    "type": {
                        "description": "Definition of default organization roles",
                        "type": "string",
                        "x-go-name": "Type"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "RoleAccess": {
                "description": "This is used for user to role assignment",
                "type": "object",
                "title": "Definition of a user-role payload",
                "required": [
                    "endpoints",
                    "methods"
                ],
                "properties": {
                    "endpoints": {
                        "description": "Concerning endpoints/services",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "x-go-name": "Endpoints"
                    },
                    "id": {
                        "description": "ID of this role access",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "ID"
                    },
                    "methods": {
                        "description": "Allowed HTTP methods",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "x-go-name": "Methods"
                    },
                    "roleID": {
                        "description": "ID of the role",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "RoleID"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "RoleAccessService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "RoleService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "RoleWithAccess": {
                "type": "object",
                "required": [
                    "name",
                    "organizationID"
                ],
                "properties": {
                    "description": {
                        "description": "Optional description for this role",
                        "type": "string",
                        "x-go-name": "Description"
                    },
                    "id": {
                        "description": "ID for this role",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "ID"
                    },
                    "name": {
                        "description": "Name for this role",
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "organizationID": {
                        "description": "Connected organization ID",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "OrganizationID"
                    },
                    "role_access": {
                        "type": "array",
                        "items": {
                            "description": "This is used for user to role assignment",
                            "type": "object",
                            "title": "Definition of a user-role payload",
                            "required": [
                                "endpoints",
                                "methods"
                            ],
                            "properties": {
                                "endpoints": {
                                    "description": "Concerning endpoints/services",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "x-go-name": "Endpoints"
                                },
                                "id": {
                                    "description": "ID of this role access",
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": 1,
                                    "x-go-name": "ID"
                                },
                                "methods": {
                                    "description": "Allowed HTTP methods",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "x-go-name": "Methods"
                                },
                                "roleID": {
                                    "description": "ID of the role",
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": 1,
                                    "x-go-name": "RoleID"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/rbac/api/services"
                        },
                        "x-go-name": "RoleAccess"
                    },
                    "type": {
                        "description": "Definition of default organization roles",
                        "type": "string",
                        "x-go-name": "Type"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "Scenario": {
                "description": "Scenario contains all values of a scenario payload",
                "type": "object",
                "properties": {
                    "description": {
                        "description": "user given description for this scenario",
                        "type": "string",
                        "x-go-name": "Description"
                    },
                    "id": {
                        "description": "ID for this scenario",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    },
                    "instructionCatalogID": {
                        "description": "possible id of an instruction catalog",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "InstructionCatalogID"
                    },
                    "name": {
                        "description": "user given name for this scenario",
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "organizationID": {
                        "description": "assigned organization by an ID",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "sendPosition": {
                        "description": "send position to users after alarm is closed",
                        "type": "boolean",
                        "x-go-name": "SendPosition"
                    },
                    "units": {
                        "description": "all units by their ID in an array",
                        "type": "array",
                        "items": {},
                        "x-go-name": "Units"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "ScenarioCreationRequest": {
                "description": "ScenarioCreationRequest contains the a creation request of a scenario",
                "type": "object",
                "required": [
                    "name",
                    "description",
                    "units",
                    "organizationID",
                    "sendPosition"
                ],
                "properties": {
                    "description": {
                        "description": "user given description for this scenario",
                        "type": "string",
                        "x-go-name": "Description"
                    },
                    "instructionCatalogID": {
                        "description": "possible id of an instruction catalog",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "InstructionCatalogID"
                    },
                    "name": {
                        "description": "user given name for this scenario",
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "organizationID": {
                        "description": "assigned organization by an ID",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "sendPosition": {
                        "description": "send position to users after alarm is closed",
                        "type": "boolean",
                        "x-go-name": "SendPosition"
                    },
                    "units": {
                        "description": "all units by their ID in an array",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-go-name": "Units"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "ScenarioService": {
                "description": "ScenarioService defines all required methods for interacting with scenarios",
                "type": "object",
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "Service": {
                "description": "This is used for service interaction",
                "type": "object",
                "title": "Definition of a service payload",
                "required": [
                    "name",
                    "description",
                    "methods"
                ],
                "properties": {
                    "description": {
                        "description": "Description of this service/endpoint",
                        "type": "string",
                        "x-go-name": "Description"
                    },
                    "methods": {
                        "description": "Allowed methods for this service",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "x-go-name": "Methods"
                    },
                    "name": {
                        "description": "Name of this service/endpoint",
                        "type": "string",
                        "x-go-name": "Name"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "ServiceService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "Shift": {
                "description": "Shift describes the intervals of a shift and the assigned users all user defined parameters",
                "type": "object",
                "properties": {
                    "assignees": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-go-name": "Assignees"
                    },
                    "color": {
                        "type": "string",
                        "x-go-name": "Color"
                    },
                    "days": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-go-name": "Days"
                    },
                    "endTime": {
                        "type": "string",
                        "x-go-name": "EndTime"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    },
                    "mappingDate": {
                        "type": "string",
                        "format": "date-time",
                        "x-go-name": "MappingDate"
                    },
                    "mappingLength": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "MappingLength"
                    },
                    "name": {
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "shiftScheduleID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ShiftScheduleID"
                    },
                    "startTime": {
                        "type": "string",
                        "x-go-name": "StartTime"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "ShiftSchedule": {
                "description": "ShiftSchedule contains meta-information about the schedule and multiple shifts",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    },
                    "name": {
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "organizationID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "shifts": {
                        "type": "array",
                        "items": {
                            "description": "Shift describes the intervals of a shift and the assigned users all user defined parameters",
                            "type": "object",
                            "properties": {
                                "assignees": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "x-go-name": "Assignees"
                                },
                                "color": {
                                    "type": "string",
                                    "x-go-name": "Color"
                                },
                                "days": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "x-go-name": "Days"
                                },
                                "endTime": {
                                    "type": "string",
                                    "x-go-name": "EndTime"
                                },
                                "id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ID"
                                },
                                "mappingDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "x-go-name": "MappingDate"
                                },
                                "mappingLength": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "MappingLength"
                                },
                                "name": {
                                    "type": "string",
                                    "x-go-name": "Name"
                                },
                                "shiftScheduleID": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "ShiftScheduleID"
                                },
                                "startTime": {
                                    "type": "string",
                                    "x-go-name": "StartTime"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/alarming/api/services"
                        },
                        "x-go-name": "Shifts"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "ShiftScheduleService": {
                "description": "ShiftScheduleService defines all methods used to manage shift schedules",
                "type": "object",
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "Strength": {
                "description": "This is used for the strength interaction",
                "type": "object",
                "title": "Strength describes the strength payload",
                "required": [
                    "amount",
                    "labelStrengths"
                ],
                "properties": {
                    "amount": {
                        "description": "amount of strength members for a specific alarm",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "Amount"
                    },
                    "labelStrengths": {
                        "description": "label with amount for this strength",
                        "type": "array",
                        "items": {},
                        "x-go-name": "LabelStrengths"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "StrengthConfig": {
                "description": "StrengthConfig describes a strength configuration payload",
                "type": "object",
                "properties": {
                    "labels": {
                        "description": "assigned label ids for this rank",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-go-name": "Labels"
                    },
                    "rank": {
                        "description": "rank definition (soldier, officer, general, summary)",
                        "type": "string",
                        "x-go-name": "Rank"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "StrengthConfigWrapper": {
                "description": "This is used for the strength config and wraps all configurations inside an array",
                "type": "object",
                "title": "Definition a strength config payload",
                "required": [
                    "configs"
                ],
                "properties": {
                    "configs": {
                        "type": "array",
                        "items": {
                            "description": "StrengthConfig describes a strength configuration payload",
                            "type": "object",
                            "properties": {
                                "labels": {
                                    "description": "assigned label ids for this rank",
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "x-go-name": "Labels"
                                },
                                "rank": {
                                    "description": "rank definition (soldier, officer, general, summary)",
                                    "type": "string",
                                    "x-go-name": "Rank"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/alarming/api/services"
                        },
                        "x-go-name": "Configs"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/handler"
            },
            "StrengthMap": {
                "type": "object",
                "additionalProperties": {},
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "SupportAgentResponse": {
                "description": "SupportAgentResponse contains whether the user is a support agent or not",
                "type": "object",
                "properties": {
                    "isSupportAgent": {
                        "type": "boolean",
                        "x-go-name": "IsSupportAgent"
                    }
                },
                "x-go-package": "groupalarm.com/go/support/api/services"
            },
            "SupportAgentService": {
                "description": "SupportAgentService provides all functions needed to manage support agents",
                "type": "object",
                "x-go-package": "groupalarm.com/go/support/api/services"
            },
            "SupportOrganization": {
                "description": "SupportOrganization represents a single organization and the timestamp when it allowed support agents to access it",
                "type": "object",
                "properties": {
                    "allowedTimestamp": {
                        "type": "string",
                        "format": "date-time",
                        "x-go-name": "AllowedTimestamp"
                    },
                    "organizationId": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "organizationName": {
                        "type": "string",
                        "x-go-name": "OrganizationName"
                    }
                },
                "x-go-package": "groupalarm.com/go/support/api/services"
            },
            "SupportOrganizationList": {
                "description": "A SupportOrganizationList contains multiple SupportOrganizations and a TotalSupportOrganization count used for pagination",
                "type": "object",
                "properties": {
                    "supportOrganizations": {
                        "type": "array",
                        "items": {
                            "description": "SupportOrganization represents a single organization and the timestamp when it allowed support agents to access it",
                            "type": "object",
                            "properties": {
                                "allowedTimestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "x-go-name": "AllowedTimestamp"
                                },
                                "organizationId": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "OrganizationID"
                                },
                                "organizationName": {
                                    "type": "string",
                                    "x-go-name": "OrganizationName"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/support/api/services"
                        },
                        "x-go-name": "SupportOrganizations"
                    },
                    "totalSupportOrganizations": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "TotalSupportOrganizations"
                    }
                },
                "x-go-package": "groupalarm.com/go/support/api/services"
            },
            "Token": {
                "description": "This is used for token interaction",
                "type": "object",
                "title": "Definition of a token payload",
                "required": [
                    "organizationID",
                    "name",
                    "token"
                ],
                "properties": {
                    "id": {
                        "description": "ID for this token",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "ID"
                    },
                    "name": {
                        "description": "Name for this token",
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "organizationID": {
                        "description": "Connected organization ID",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "OrganizationID"
                    },
                    "token": {
                        "description": "Actual token",
                        "type": "string",
                        "x-go-name": "Token"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "TokenRequest": {
                "description": "This is used for creation of tokens",
                "type": "object",
                "title": "Definition of a token request payload",
                "required": [
                    "organizationID",
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "Name for this token",
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "organizationID": {
                        "description": "Connected organization ID",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "OrganizationID"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "TokenService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "Unit": {
                "description": "This is used for the unit interactions",
                "type": "object",
                "title": "Unit describes an unit payload",
                "properties": {
                    "description": {
                        "description": "user given description",
                        "type": "string",
                        "x-go-name": "Description"
                    },
                    "id": {
                        "description": "ID of this unit",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    },
                    "name": {
                        "description": "user given name",
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "organizationID": {
                        "description": "connected organization by the organization ID",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "unitParts": {
                        "description": "assigned unit parts for labels and their amounts",
                        "type": "array",
                        "items": {},
                        "x-go-name": "UnitParts"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "UnitCreationRequest": {
                "description": "This is used for the unit creation dialog",
                "type": "object",
                "title": "UnitCreationRequest describes an unit creation payload",
                "required": [
                    "name",
                    "description",
                    "organizationID",
                    "unitParts"
                ],
                "properties": {
                    "description": {
                        "description": "user given description for this unit",
                        "type": "string",
                        "x-go-name": "Description"
                    },
                    "name": {
                        "description": "user given name for this unit",
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "organizationID": {
                        "description": "id from assigned organization",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "OrganizationID"
                    },
                    "unitParts": {
                        "description": "assigned unit parts for labels and their amounts",
                        "type": "array",
                        "items": {
                            "description": "This is used for the unit creation dialog and unit parts inside the unit creation payload",
                            "type": "object",
                            "title": "UnitPartCreationRequest describes an unit part creation payload",
                            "properties": {
                                "amount": {
                                    "description": "Amount of users for the defined label",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "Amount"
                                },
                                "labelID": {
                                    "description": "ID of the assigned label",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "LabelID"
                                },
                                "unitID": {
                                    "description": "ID of the unit",
                                    "type": "integer",
                                    "format": "int64",
                                    "x-go-name": "UnitID"
                                }
                            },
                            "x-go-package": "groupalarm.com/go/alarming/api/services"
                        },
                        "x-go-name": "UnitParts"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "UnitPart": {
                "description": "This is used for the unit parts inside the unit payload",
                "type": "object",
                "title": "UnitPart describes an unit part payload",
                "properties": {
                    "amount": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "Amount"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    },
                    "isSubstitute": {
                        "type": "boolean",
                        "x-go-name": "IsSubstitute"
                    },
                    "label": {},
                    "unitID": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "UnitID"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "UnitPartCreationRequest": {
                "description": "This is used for the unit creation dialog and unit parts inside the unit creation payload",
                "type": "object",
                "title": "UnitPartCreationRequest describes an unit part creation payload",
                "properties": {
                    "amount": {
                        "description": "Amount of users for the defined label",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "Amount"
                    },
                    "labelID": {
                        "description": "ID of the assigned label",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "LabelID"
                    },
                    "unitID": {
                        "description": "ID of the unit",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "UnitID"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "UnitService": {
                "description": "UnitService defines all methods for operations in the Unit Domain",
                "type": "object",
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "User": {
                "description": "User is a basic copy of user-service's PublicUser",
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "x-go-name": "EMail"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "ID"
                    },
                    "name": {
                        "type": "string",
                        "x-go-name": "Name"
                    },
                    "surname": {
                        "type": "string",
                        "x-go-name": "Surname"
                    }
                },
                "x-go-package": "groupalarm.com/go/audit/api/services"
            },
            "UserLabels": {
                "description": "UserLabels contains all labels for this userID",
                "type": "object",
                "properties": {
                    "Labels": {
                        "type": "array",
                        "items": {}
                    },
                    "UserID": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "UserRankAssignmentRequest": {
                "description": "This is used for a user-rank assignment request",
                "type": "object",
                "title": "Definition an user to rank assignment request payload",
                "required": [
                    "userID",
                    "rank"
                ],
                "properties": {
                    "rank": {
                        "description": "rank value",
                        "type": "string",
                        "x-go-name": "Rank"
                    },
                    "userID": {
                        "description": "userID",
                        "type": "integer",
                        "format": "int64",
                        "x-go-name": "UserID"
                    }
                },
                "x-go-package": "groupalarm.com/go/alarming/api/handler"
            },
            "UserRole": {
                "description": "This is used for user to role assignment",
                "type": "object",
                "title": "Definition of a user-role payload",
                "required": [
                    "userID",
                    "roleID"
                ],
                "properties": {
                    "roleID": {
                        "description": "ID of the role",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "RoleID"
                    },
                    "userID": {
                        "description": "ID of the user",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "x-go-name": "UserID"
                    }
                },
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "UserRolesService": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/rbac/api/services"
            },
            "UserStatusService": {
                "description": "UserStatusService describes all methods we have to implement",
                "type": "object",
                "x-go-package": "groupalarm.com/go/alarming/api/services"
            },
            "labelHandlerContext": {
                "type": "object",
                "x-go-package": "groupalarm.com/go/alarming/api/handler"
            }
        }
    },
    "security": [
        {
            "API_Token": []
        },
        {
            "Personal-Access-Token": []
        }
    ]
}